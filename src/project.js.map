{"version":3,"sources":["assets/src/Atk.js","assets/src/AutoSpr.js","assets/src/DataTool.js","assets/src/Data.js","assets/src/Def.js","assets/dyl/DylAd.js","assets/dyl/DylButton.js","assets/dyl/DylEndgame.js","assets/dyl/DylHpLayer.js","assets/dyl/DylLab.js","assets/dyl/DylLoadingUi.js","assets/dyl/DylNode.js","assets/dyl/DylPool.js","assets/dyl/DylPre.js","assets/dyl/DylTileMap.js","assets/dyl/DylWindow.js","assets/dyl/DylWuli.js","assets/src/En.js","assets/src/GameInit.js","assets/src/GameMain.js","assets/src/GameStart.js","assets/dyl/HjmData.js","assets/src/Me.js","assets/src/Not.js","assets/src/Shop.js","assets/src/Skill.js","assets/src/Test.js","assets/dyl/aes.js","assets/scene/test.js"],"names":["cc","Class","extends","Component","properties","onLoad","_this","this","node","type","name","hjm","atk","dyl","data","ai","atkFun","tool","spr","add","counter","top","dir","callBack","parent","setPosition","move","moveBy","fade","fadeTo","scale","scaleTo","spawn","cfun","callFunc","opacity","seq","sequence","runAction","reset","setScale","path","loader","loadRes","SpriteFrame","err","sprr","getComponent","Sprite","spriteFrame","w","h","toolLayer","Node","buttonLayer","chooseSpr","dataNode","pool","stateNode","posArr","initPosArr","setType","touchOn","p","touchNode","in","apply","_toConsumableArray","getChildren","chooseTool","log","chooseNode","setData","hp","nextOn","setPage","pageNum","chooseOn","toolArr","active","backOn","setArr","arr","initTool","num","maxShowNum","id","length","i","_i","_i2","_node","_this2","size","getSize","wl","x","hl","y","oriX","oriY","addMap","n","push","resetUi","mainDataNode","toolData","onEnable","atkSpr","defSpr","def","heroData","button","atkOn","defOn","defFun","end","isDebug","__isDebug","__debugShowad","agent","ads_plugin","setTimeout","anysdk","agentManager","getAdsPlugin","callFuncWithParam","__adFun","__isLoading","show","param","PluginParam","create","addAd","fun","showad","param0","callBoolFuncWithParam","prefab","newNode","instantiate","director","getScene","addChild","SceneEnum","Enum","Null","NextScene","NextLevel","Restart","ExitGame","Popup","Popdown","editor","menu","executeInEditMode","audio","default","url","AudioClip","touchFun","EventHandler","clearArr","String","sceneType","notify","_refresh","nextScene","visible","popEvent","_flag","_lastStr","_inputStr","_patch","nodeName","updateNodeData","changeStr","myInit","self","_scale","color","getScale","on","event","onClick","audioEngine","play","handler","emit","save","loadScene","_name","replace","split","error","Number","nextName","sys","isMobile","isBrowser","window","opener","open","close","isNative","warn","stopAllActions","popNode","_cfun","_fade","_scale2","nextStr","setNodeName","now","getNodeNameArr","ans","nowId","tmpArr","j","_tmpArr","slice","str","last","input","patch","getPatch","delNum","_input","_str","stateNodeArr","__preload","initHpLayer","thisNode","__lab","Label","delPool","del","__poolId","Math","floor","string","scale1","scale2","initLab","Object","defineProperty","get","set","lab","scaleChangeId","isValid","_loop","d","cd","nodeArr","getChildByName","r","initTouch","destroy","update","dt","sin","Effect","SmallBig","Red","Shake","LoadData","loadArrName","touch","isPhysics","isShowDebug","gravity","isLoad","loadDataArr","target","loadDataCallBack","emitCallBack","js","component","initPhysics","getPhysicsManager","enabled","debugDrawFlags","PhysicsManager","DrawBits","e_aabbBit","e_pairBit","e_centerOfMassBit","e_jointBit","e_shapeBit","setLoad","setTouch","loadArr","endFun","ansArr","_loadDataArr$i","onDestroy","__loadData","releaseRes","bindNode","nowTouchState","pos","getLocation","convertToNodeSpace","getContentSize","_ref","width","height","_ref2","subSelf","len","arguments","_ref3","nx","ny","_ref4","_ref5","abs","scaleX","scaleY","checkIn","setRun","run","root","node0","createFun","act","createJsFun","createArr","counterNum","delFun","createOther","easing","easeIn","easeInOut","createMove","createDelay","delay","delayTime","Array","isArray","setRand","__randNum","rand","setAct","_this3","__oriScale","_node$color","g","b","__oriColor","__seq","__red","stopAction","easeQuadraticActionInOut","initPool","arr2","from","initDylFun","cryptoJS","__debug","map","val","value","find","addMapLayer","ori","mul","sub","maxX","maxY","mulSelf","randNum","__encryptFun","word","key","enc","Utf8","parse","iv","encrypted","AES","encrypt","mode","CBC","padding","pad","Pkcs7","Base64","stringify","ciphertext","__decryptFun","uncrypted","decrypt","toString","uncryptedNum","parseInt","JSON","localStorage","setItem","removeItem","read","getItem","data1","keyOnData","keyUpData","isOn","s","a","up","down","left","right","eventManager","addListener","EventListener","KEYBOARD","onKeyPressed","keyCode","KEY","onKeyReleased","keyOn","keyUp","addDirArr","sort","endId","_data","process","tab","undefined","counterId","counterArr","nextArr","runChild","childCounter","childJs","arrr","concat","next","_len","_key","initHjmDataFun","initHjmFun","iscryptoJS","isCryptoJS","initTileMap","tmx","TiledMap","mapSize","getMapSize","tileD","getTileSize","posMap","layerName","layer","TiledLayer","getLayerSize","getMapTileSize","gid","getTileGIDAt","getObjectGroup","getObjects","_x","_y","NodeData","rotation","anchorX","anchorY","skewX","skewY","NodeDataArr","ctor","_myInit","configurable","showData","_getString","stateArr","_read","_stateArr","_save","time","myAct","oriScale","oriOpacity","scaleR","opacityR","dataArr","Canvas","designResolution","_getSaveData","saveData","_getSaveNodeArr","_addNodeData","nodeData","collisionFun","rigidbody","RigidBody","linearVelocity","velocity","linearDamping","damping","force","applyForceToCenter","fixedRotation","enabledContactListener","collisionComponent","onBeginContact","contact","selfCollider","otherCollider","disabled","lv","level","enNameArr","getEnNameArr","getEnArr","count","enArr","initMap","myStart","_en","getNotArr","notNum","notArr","_not","myArr","_me","_cc$Class","start","touchData","myStartEnd","saveTouch","tp","delTouch","getAction","_dataArr$i","bind","getRunTypeInit","_defineProperty","getDir","moveNode","moveType","oriParent","_top","ntp","moveTo","dirArr","enPosArr","atkNode","atkDir","defNode","defDir","_skill","notLose","notWin","die","endAns","ep","en","oriData","_end","me","not","stateFun","say","_say","shopOn","_shop","stateOn","_state","playOn","readShop","readEn","_enCard","_shopCard","_playOpen","_playFight","chName","setSpr","enName","_hjm","defBg","equipNode","buyNode","shop","atkArr","defArr","toolTab","buyOn","equip","coin","_i3","skillName","fun_getQueue","queue","pop","fun_getDirArr","enType","np","act_notFront","f","nowNode","back","go","act_notBack","nextNode","back1","back2","reset1","reset2","act_arrBack","arr0","arr1","notBackArr","act_rotateArrBack","backArr1","backArr2","move1","move2","act_rotate","rotate","rotateTo","fun_rotate","fun_atk","hurtNum","defFunName","notDef","fun_arrAtk","fun_getLinkArr","visit","notBackDef","_hpLayer","notAtk","_dyl","notState","friendState","bigAtk","_dyl2","twoAtk","_this4","electricAtk","_dyl3","_this5","seqArr","rotateAtk","_dyl4","_dyl5","_this6","callId","rotateArr","sprite","CryptoJS","u","l","lib","t","Base","extend","prototype","c","mixIn","hasOwnProperty","init","$super","clone","WordArray","words","sigBytes","v","e","clamp","k","ceil","call","random","Hex","join","substr","Latin1","fromCharCode","charCodeAt","decodeURIComponent","escape","Error","unescape","encodeURIComponent","q","BufferedBlockAlgorithm","_nDataBytes","_append","_process","blockSize","max","_minBufferSize","min","_doProcessBlock","splice","Hasher","cfg","_doReset","finalize","_doFinalize","_createHelper","_createHmacHelper","HMAC","algo","_map","charAt","indexOf","MD5","_hash","z","A","B","C","D","E","m","HmacMD5","EvpKDF","keySize","hasher","iterations","compute","Cipher","createEncryptor","_ENC_XFORM_MODE","createDecryptor","_DEC_XFORM_MODE","_xformMode","ivSize","StreamCipher","_iv","_prevBlock","BlockCipherMode","Encryptor","Decryptor","_cipher","processBlock","encryptBlock","decryptBlock","unpad","BlockCipher","_mode","CipherParams","formatter","format","OpenSSL","salt","SerializableCipher","algorithm","_parse","kdf","execute","PasswordBasedCipher","F","G","H","_nRounds","_keySchedule","_invKeySchedule","_doCryptBlock","prePk","getAtkDefEn","checkDie","endPlay","isAtk","isDef"],"mappings":"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","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    },\r\n\r\n    onLoad () {\r\n        this.node.type = \"atk\";\r\n        let name = hjm.atk;\r\n\r\n        // id name atk atkFun say\r\n        dyl.data(\"atk.\" + name, this.node);\r\n        // this.node.atk = Number(dyl.data.atk[name].atk);\r\n        // dyl.atkFun = dyl.data.atk[name].fun;\r\n        // this.node.atk = dyl.data.atk[name];\r\n        // let spr = this.node.getChildByName(\"spr\");\r\n        // cc.loader.loadRes(\"atk/\" + name, cc.SpriteFrame, (err, sprr)=>{\r\n        // \tlet sprite = spr.getComponent(cc.Sprite);\r\n        // \tsprite.spriteFrame = sprr;\r\n        // });\r\n        ai.atkFun = this.node.atkFun;\r\n        hjm[name] = this.node.tool;\r\n        let spr = this.node.tool;\r\n        this.node.add = (counter, top, dir, callBack)=>{\r\n        \t// cc.log(\"atk add\");\r\n        \tspr.parent = top;\r\n        \tspr.setPosition(this.node);\r\n        \tlet time = 0.5;\r\n        \tlet move = cc.moveBy(time, dir);\r\n        \tlet fade = cc.fadeTo(time, 50);\r\n        \tlet scale = cc.scaleTo(time, 0.5);\r\n        \tlet spawn = cc.spawn(move, fade, scale);\r\n        \tlet cfun = cc.callFunc(()=>{\r\n        \t\tspr.opacity = 0;\r\n                callBack();\r\n        \t\tcounter();\r\n        \t});\r\n        \tlet seq = cc.sequence(spawn, cfun);\r\n        \tspr.runAction(seq);\r\n        }\r\n\r\n        this.node.reset = ()=>{\r\n        \t// cc.log(\"atk reset\");\r\n        \tspr.parent = this.node;\r\n        \tspr.setPosition(0, 0);\r\n        \tspr.opacity = 255;\r\n        \tspr.setScale(1);\r\n        \t// spr.active = true;\r\n        }\r\n    },\r\n\r\n\r\n\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    },\r\n\r\n    onLoad () {\r\n    \tthis.node.add = (path)=>{\r\n    \t\tcc.loader.loadRes(path, cc.SpriteFrame, (err, sprr)=>{\r\n        \t\tlet sprite = this.node.getComponent(cc.Sprite);\r\n        \t\tsprite.spriteFrame = sprr;\r\n        \t});\r\n    \t}\r\n    },\r\n\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        w: 5,\r\n        h: 3,\r\n        // wl: 300,\r\n        // hl: 200,\r\n        toolLayer: cc.Node,\r\n\r\n        buttonLayer: cc.Node,\r\n        // defBg: cc.Node,\r\n        chooseSpr: cc.Node,\r\n        dataNode: cc.Node,\r\n        pool: cc.Node,\r\n        stateNode: cc.Node,\r\n    },\r\n\r\n    onLoad () {\r\n        this.posArr = this.initPosArr();\r\n        // let tab = {};\r\n        // let atkArr = hjm.atkArr;\r\n        // let defArr = hjm.defArr;\r\n        // for (let i = atkArr.length - 1; i >= 0; i--) {\r\n        //     tab[atkArr[i]] = true;\r\n        // }\r\n        // for (let i = defArr.length - 1; i >= 0; i--) {\r\n        //     tab[defArr[i]] = true;\r\n        // }\r\n        // this.toolTab = tab;\r\n        // this.maxShowNum = this.w * this.h;\r\n        // this.pageNum = 0;\r\n        // this.setType(\"atk\");\r\n        this.node.setType = (type)=>this.setType(type);\r\n\r\n\r\n    },\r\n\r\n\r\n    touchOn (p) {\r\n        let touchNode = p.in(...this.buttonLayer.getChildren());\r\n        if (touchNode) {\r\n            this[touchNode.name + \"On\"](p);\r\n        }\r\n    },\r\n\r\n    chooseTool (node) {\r\n        cc.log(\"chooseTool\");\r\n        // if (!node) { //没有选中物品的状态\r\n        //     this.chooseSpr.x = -2000;\r\n        //     this.chooseNode = null;\r\n        //     this.setData(\"default\");\r\n        // }\r\n        // else {\r\n            this.chooseSpr.setPosition(node);\r\n            this.chooseNode = node;\r\n            this.setData(node.name);\r\n            hjm[this.type] = node.name;\r\n        // }\r\n    },\r\n\r\n    setData (name) {\r\n        cc.log(\"setData\");\r\n        dyl.data(this.type + \".\" + name, this.dataNode);\r\n        this.dataNode.hp = this.dataNode[this.type];\r\n        hjm[name] = this.dataNode.tool;\r\n    },\r\n\r\n    // atkOn () {\r\n    //     cc.log(\"atkOn\");\r\n    //     this.setType(\"atk\");\r\n    // },\r\n\r\n    // defOn () {\r\n    //     cc.log(\"defOn\");\r\n    //     this.setType(\"def\");\r\n    // },\r\n\r\n    nextOn () {\r\n        cc.log(\"nextOn\");\r\n        this.setPage(this.pageNum + 1);\r\n    },\r\n\r\n    // buyOn () {\r\n    //     cc.log(\"buyOn\");\r\n    //     if (this.chooseNode) {\r\n    //         if (this.chooseNode.has.active) {\r\n    //             return;\r\n    //         }\r\n    //         else if (this.chooseNode.notMoney.active) {\r\n    //             return;\r\n    //         }\r\n    //         else {\r\n    //             this.chooseNode.has.active = true;\r\n    //             let name = this.chooseNode.name;\r\n    //             this.toolTab[name] = true;\r\n    //             hjm[this.type + \"Arr\"].push(name);\r\n    //             hjm.coin -= this.chooseNode.coin;\r\n    //         }\r\n    //     }\r\n    // },\r\n\r\n    chooseOn (p) {\r\n        cc.log(\"chooseOn\");\r\n        let tool = p.in(...this.toolArr);\r\n        if (tool && tool.active) {\r\n            this.chooseTool(tool);\r\n        }\r\n    },\r\n\r\n    backOn (p) {\r\n        this.node.add(null, -0.3);\r\n        this.stateNode.active = true;\r\n    },\r\n\r\n    setType (type) {\r\n        cc.log(\"setType\");\r\n        this.type = type;\r\n        this.setArr(hjm[type + \"Arr\"]);\r\n        // this.chooseTool();\r\n    },\r\n\r\n    setArr (arr) {\r\n        cc.log(\"setArr\");\r\n        this.arr = arr;\r\n        this.setPage(0);\r\n    },\r\n\r\n    initTool (node, name) {\r\n        cc.log(\"initTool\");\r\n        dyl.data(this.type + \".\" + name, node);\r\n        hjm[name] = node.tool;\r\n        node.name = name;\r\n        // if (this.toolTab[name]) {\r\n        //     node.has.active = true;\r\n        //     node.notMoney.active = false;\r\n        // }\r\n        // else if (node.coin > hjm.coin) {\r\n        //     node.has.active = false;\r\n        //     node.notMoney.active = true;\r\n        // }\r\n        // else {\r\n        //     node.has.active = false;\r\n        //     node.notMoney.active = false;\r\n        // }\r\n        if (name === hjm[this.type]) {\r\n            this.chooseNode = node;\r\n        }\r\n\r\n    },\r\n\r\n    setPage (num) {\r\n        cc.log(\"setPage\");\r\n        if (num < 0) {\r\n            return false;\r\n        }\r\n        let maxShowNum = this.w * this.h;  \r\n        let id = maxShowNum * num;\r\n        if (id >= this.arr.length) {\r\n            return false;\r\n        }\r\n        this.pageNum = num;\r\n        if (id + maxShowNum > this.arr.length) {\r\n            for (let i = id; i < this.arr.length; i++) {\r\n                let node = this.toolArr[i];\r\n                node.active = true;\r\n                this.initTool(node, this.arr[i]);                \r\n            }\r\n\r\n            for (let i = this.arr.length; i < id + maxShowNum; i++) {\r\n                this.toolArr[i].active = false;\r\n            }\r\n        }\r\n        else {\r\n            for (let i = id; i < id + maxShowNum; i++) {\r\n                let node = this.toolArr[i];\r\n                node.active = true;\r\n                this.initTool(node, this.toolArr[i]);\r\n            }\r\n        }\r\n        this.chooseTool(this.chooseNode);\r\n    },\r\n\r\n    initPosArr () {\r\n        cc.log(\"initPosArr\");\r\n        let {w, h} = this;\r\n        let size = dyl.getSize(this.toolLayer);\r\n        let wl = size.x / w;\r\n        let hl = size.y / h;\r\n        let oriX = -wl * (w - 1) * 0.5;\r\n        let oriY = hl * (h - 1) * 0.5 + this.toolLayer.y;\r\n        let posArr = [];\r\n        let toolArr = [];\r\n        dyl.addMap(w, h, (p)=>{\r\n            let {x, y} = p;\r\n            let n = y * w + x;\r\n            posArr[n] = cc.p(oriX + x * wl, oriY - y * hl);\r\n            let node = this.pool.add();\r\n            node.setPosition(posArr[n]);\r\n            node.active = false;\r\n            toolArr.push(node);\r\n        });\r\n        this.toolArr = toolArr;\r\n        this.posArr = posArr;\r\n    },\r\n\r\n    resetUi () {\r\n\r\n    },\r\n\r\n\r\n\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        mainDataNode: cc.Node,\r\n        buttonLayer: cc.Node,\r\n        toolData: cc.Node,\r\n    },\r\n\r\n    onEnable () {\r\n        this.atkSpr = this.buttonLayer.atk;\r\n        this.defSpr = this.buttonLayer.def;\r\n        let atk = hjm.atk;\r\n        hjm[atk] = this.atkSpr.tool;\r\n        let def = hjm.def;\r\n        hjm[def] = this.defSpr.tool;\r\n        let data = hjm.heroData;\r\n        for (let i in data) {\r\n            this.mainDataNode[i] = data[i];\r\n        }\r\n    },\r\n\r\n\r\n    touchOn (p) {\r\n        let arr = this.buttonLayer.getChildren();\r\n        let button = p.in(...arr);\r\n        if (button) {\r\n            this[button.name + \"On\"](p);\r\n        }\r\n    },\r\n\r\n    backOn (p) {\r\n        cc.log(\"data backOn\");\r\n        this.node.add(null, -0.3);\r\n    },\r\n\r\n    atkOn (p) {\r\n        this.toolData.add(null, 0.3);\r\n        this.toolData.setType(\"atk\");\r\n        this.node.active = false;\r\n    },\r\n\r\n    defOn (p) {\r\n        this.toolData.add(null, 0.3);\r\n        this.toolData.setType(\"def\");\r\n        this.node.active = false;\r\n    }\r\n\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    },\r\n\r\n    onLoad () {\r\n        this.node.type = \"def\";\r\n        let name = hjm.def;\r\n        // this.node.atk = dyl.data.atk[name];\r\n        // this.node.def = Number(dyl.data.def[name].def);\r\n        // dyl.defFun = dyl.data.def[name].fun;\r\n        dyl.data(\"def.\" + name, this.node);\r\n        ai.defFun = this.node.defFun;\r\n        hjm[name] = this.node.tool;\r\n        // let spr = this.node.getChildByName(\"spr\");\r\n        // cc.log(\"spr\", spr);\r\n        // cc.loader.loadRes(\"def/\" + name, cc.SpriteFrame, (err, sprr)=>{\r\n        // \tlet sprite = spr.getComponent(cc.Sprite);\r\n        // \tsprite.spriteFrame = sprr;\r\n        // \t// cc.log(\"end\");\r\n        // });\r\n        let spr = this.node.tool;\r\n        this.node.add = (end, top, dir, callBack)=>{\r\n        \t// cc.log(\"def add\");\r\n        \tspr.parent = top;\r\n        \tspr.setPosition(this.node);\r\n        \tlet time = 0.5;\r\n        \tlet move = cc.moveBy(time, dir);\r\n        \tlet fade = cc.fadeTo(time, 50);\r\n        \tlet scale = cc.scaleTo(time, 0.5);\r\n        \tlet spawn = cc.spawn(move, fade, scale);\r\n        \tlet cfun = cc.callFunc(()=>{\r\n        \t\tspr.opacity = 0;\r\n                callBack();\r\n        \t\tend();\r\n        \t});\r\n        \tlet seq = cc.sequence(spawn, cfun);\r\n        \tspr.runAction(seq);\r\n        }\r\n\r\n        this.node.reset = ()=>{\r\n        \t// cc.log(\"def reset\");\r\n        \tspr.parent = this.node;\r\n        \tspr.setPosition(0, 0);\r\n        \tspr.opacity = 255;\r\n        \tspr.setScale(1);\r\n        \t// spr.active = true;\r\n        }\r\n    },\r\n\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        isDebug: false\r\n    },\r\n\r\n    onLoad: function () {\r\n        let __isDebug = this.isDebug;\r\n        let __debugShowad = false;\r\n        let agent = null;\r\n        let ads_plugin = null;\r\n        if (!__isDebug) {\r\n            agent = anysdk.agentManager;\r\n            ads_plugin = agent.getAdsPlugin();\r\n            // ads_plugin.preloadAds(AdsType.AD_TYPE_REWARDEDVIDEO);\r\n            // this.log(typeof ads_plugin.callFuncWithParam);\r\n            ads_plugin.callFuncWithParam(\"preloadAd\");\r\n        }\r\n        else {\r\n            setTimeout(()=>{\r\n                __debugShowad = true;\r\n            }, 10000);\r\n        }\r\n\r\n        dyl.__adFun = ()=>{};\r\n        dyl.__isLoading = false;\r\n        let show = ()=>{\r\n            if (!__isDebug) {\r\n                let param = anysdk.PluginParam.create(\"gq4XnooZ4zAyQJPiva3\");\r\n                // var ads_plugin = agent.getAdsPlugin();\r\n                // var ads_plugin = this.ads_plugin;\r\n                ads_plugin.callFuncWithParam(\"showAd\", param);\r\n            }\r\n            else {\r\n                cc.log(\"假广告出来了，哈哈哈哈哈\");\r\n            }\r\n        }\r\n        dyl.addAd = (fun)=>{\r\n            if (fun) {\r\n                dyl.__adFun = fun;\r\n            }\r\n            let showad = null;\r\n            if (!__isDebug) {\r\n                let param0 = anysdk.PluginParam.create(\"gq4XnooZ4zAyQJPiva3\");\r\n                showad = ads_plugin.callBoolFuncWithParam(\"couldShowAd\", param0);\r\n            }\r\n            else {\r\n                showad = __debugShowad;\r\n            }\r\n            if (showad) {\r\n                show();\r\n                dyl.__adFun();\r\n                return true;\r\n            }\r\n            else {\r\n                if (dyl.__isLoading) {\r\n                    return false;\r\n                }\r\n                dyl.__isLoading = true;\r\n                cc.loader.loadRes(\"dylLoadingAd\", function (err, prefab) {\r\n                    let newNode = cc.instantiate(prefab);\r\n                    let canvas = cc.director.getScene().getChildren()[0];\r\n                    canvas.addChild(newNode);\r\n                });\r\n                return false;\r\n            }\r\n            return showad;\r\n        }\r\n    },\r\n});\r\n","var SceneEnum = cc.Enum({\r\n    Null: 0,\r\n    NextScene: 1,\r\n    NextLevel: 2,\r\n    Restart: 3,\r\n    ExitGame: 4,\r\n    Popup: 5,\r\n    Popdown: 6,\r\n})\r\ncc.Class({\r\n    extends: cc.Component,\r\n    editor: {\r\n        menu: \"dyl/按钮\",\r\n        executeInEditMode: true,\r\n    },\r\n    properties: {\r\n        audio: {\r\n            default: null,\r\n            url: cc.AudioClip,\r\n        },\r\n        touchFun: {\r\n            default: null,\r\n            type: cc.Component.EventHandler,\r\n        },\r\n\r\n        clearArr: [cc.String],\r\n\r\n        sceneType: {\r\n            default: SceneEnum.Null,\r\n            type: cc.Enum(SceneEnum),\r\n            notify() {\r\n                this._refresh();\r\n            }\r\n        },\r\n        nextScene: {\r\n            default: \"\",\r\n            visible: false\r\n        },\r\n        // popNode: {\r\n        //     default: null,\r\n        //     type: cc.Node,\r\n        //     visible: false,\r\n        // },\r\n        popEvent: {\r\n            default: null,\r\n            type: cc.Component.EventHandler,\r\n            visible: false\r\n        },\r\n\r\n\r\n        _flag: false,\r\n        _lastStr: \"\",\r\n        _inputStr: \"\",\r\n        _patch: \"\",\r\n        nodeName: {\r\n            default: \"\",\r\n            type: cc.String,\r\n            notify () {\r\n                if (this._flag) {\r\n                    this._flag = false;\r\n                    // return ;\r\n                }\r\n                this.updateNodeData();\r\n                this.changeStr();\r\n            }\r\n        }\r\n    },\r\n\r\n    _refresh: function () {\r\n        if (CC_EDITOR) {\r\n            cc.Class.Attr.setClassAttr(this, 'nextScene', 'visible', (this.sceneType === SceneEnum.NextScene));\r\n            cc.Class.Attr.setClassAttr(this, 'nodeName', 'visible', ((this.sceneType === SceneEnum.Popup) ||(this.sceneType === SceneEnum.Popdown)));\r\n            cc.Class.Attr.setClassAttr(this, 'popEvent', 'visible', ((this.sceneType === SceneEnum.Popup) ||(this.sceneType === SceneEnum.Popdown)));\r\n        }\r\n    },\r\n\r\n    onEnable: function () {\r\n        if (CC_EDITOR) {\r\n            this._refresh();\r\n            if (!this.audio && dyl.___audio) {\r\n                this.audio = dyl.___audio;\r\n            }\r\n            else if (this.audio && !dyl.___audio) {\r\n                dyl.___audio = this.audio;\r\n            }\r\n        }\r\n        else {\r\n            this.myInit();\r\n        }\r\n    },\r\n\r\n    myInit: function () {\r\n        let self = this;\r\n        let _color = this.node.color;\r\n        let _scale = this.node.getScale();\r\n        this.node.on('touchstart', function ( event ) {\r\n            // self.node.color = cc.color(125, 125, 125);\r\n            self.node.setScale(1.2 * _scale);\r\n        });  \r\n        this.node.on('touchend', function ( event ) {\r\n            // self.node.color = _color;\r\n            self.node.setScale(_scale);\r\n            self.onClick();\r\n        });  \r\n        this.node.on('touchcancel', function ( event ) {\r\n            // self.node.color = _color;\r\n            self.node.setScale(_scale);\r\n        }); \r\n    },\r\n\r\n    onClick: function () {\r\n        if (this.audio) {\r\n            cc.audioEngine.play(this.audio, false, 1);\r\n        }\r\n        if (this.touchFun && (this.touchFun.handler !== '')) {\r\n            this.touchFun.emit();\r\n        }\r\n\r\n        for (var i = this.clearArr.length - 1; i >= 0; i--) {\r\n            let name = this.clearArr[i];\r\n            dyl.save(name, null);\r\n        }\r\n\r\n        if (this.sceneType === SceneEnum.NextScene) {\r\n            return cc.director.loadScene(this.nextScene);\r\n        }\r\n        else if (this.sceneType === SceneEnum.NextLevel) {\r\n            let name = cc.director.getScene().name;\r\n            let num = name.replace(/[^0-9]/ig,\"\"); \r\n            let arr = name.split(num);\r\n            if (arr.length === 1) {\r\n                return cc.error(\"这个关卡命名有问题，不是只有一个数字\");\r\n            }\r\n            num = Number(num) + 1;\r\n            let nextName = arr[0] + String(num) + arr[1];\r\n            return cc.director.loadScene(nextName);\r\n        }\r\n        else if (this.sceneType === SceneEnum.ExitGame) {\r\n            if (cc.sys.isMobile){\r\n               return cc.director.end();\r\n            }\r\n            else if (cc.sys.isBrowser) {\r\n                window.opener=null;\r\n                window.open('','_self');\r\n                window.close();\r\n                return;\r\n            }\r\n            else if (cc.sys.isNative) {\r\n\r\n            }\r\n        }\r\n        else if (this.sceneType === SceneEnum.Restart) {\r\n            return cc.director.loadScene(cc.director.getScene().name);\r\n        }\r\n        else if (this.sceneType === SceneEnum.Popup) {\r\n            // let node = this.popNode;\r\n            if (this.nodeName === \"\") {\r\n                return cc.warn(\"按钮弹窗节点为空\");\r\n            }\r\n            let nodeName = \"_\" + this.nodeName.replace(\" \", \"\");\r\n            let node = hjm[nodeName];\r\n            node.stopAllActions();\r\n            node.active = true;\r\n            node.setScale(2);\r\n            node.opacity = 0;\r\n            let fun = ()=>{\r\n                if (this.popEvent && (this.popEvent.handler !== '')) {\r\n                    this.popEvent.emit();\r\n                }\r\n            }\r\n            let cfun = cc.callFunc(fun);\r\n            let fade = cc.fadeTo(0.3, 255);\r\n            let scale = cc.scaleTo(0.3, 1);\r\n            node.runAction(cc.sequence(cfun, cc.spawn(fade, scale)));\r\n        }\r\n        else if (this.sceneType === SceneEnum.Popdown) {\r\n            let node = this.popNode;\r\n            node.stopAllActions();\r\n            node.active = true;\r\n            node.setScale(1);\r\n            node.opacity = 255;\r\n            let fun = ()=>{\r\n                if (this.popEvent && (this.popEvent.handler !== '')) {\r\n                    this.popEvent.emit();\r\n                }\r\n                node.active = false;\r\n            }\r\n            let cfun = cc.callFunc(fun);\r\n            let fade = cc.fadeTo(0.3, 0);\r\n            let scale = cc.scaleTo(0.3, 2);\r\n            node.runAction(cc.sequence(cc.spawn(fade, scale), cfun));\r\n        }\r\n    },\r\n\r\n//下面button弹窗的节点字符串\r\n\r\n    nextStr: function () {\r\n        if (this._inputStr === \"\") {\r\n            return this.setNodeName(\"\");\r\n        }\r\n        let now = this._inputStr + this._patch;\r\n        let arr = this.getNodeNameArr;\r\n        let ans = \"\";\r\n        let nowId = 0;\r\n        for (let i = arr.length - 1; i >= 0; i--) {\r\n            let tmpArr = arr[i].split(this._inputStr);\r\n            if (tmpArr.length > 1 && tmpArr[0] === \"\") {\r\n                if (arr[i] === now) {\r\n                    nowId = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < arr.length; i++) {\r\n            let j = (i + nowId + 1) % arr.length;\r\n            let tmpArr = arr[j].split(this._inputStr);\r\n            if (tmpArr.length > 1 && tmpArr[0] === \"\") {\r\n                ans = arr[j];\r\n                break;\r\n            }\r\n        }\r\n        this._patch = ans.slice(this._inputStr.length);\r\n        let str = this._inputStr + \" \" + this._patch;\r\n        this._lastStr = str;\r\n        this.setNodeName(str);\r\n    },\r\n\r\n    changeStr: function () {\r\n        let last = this._lastStr;\r\n        let now = this.nodeName;\r\n        if (now.length > last.length) {\r\n            // cc.log(typeof now, now);\r\n            let add = now.slice(last.length);\r\n            if (add === \" \") {\r\n                return this.nextStr();\r\n            }\r\n            let input = this._inputStr + add;\r\n            // let patch = this.getPatch(input);\r\n            // if (!patch) {\r\n            //     // this.nodeName = this._lastStr;\r\n            //     this.setNodeName(this._lastStr);\r\n            //     return;\r\n            // }\r\n            // input = this._inputStr.slice(0, this._inputStr.length - delNum);\r\n            let patch = false;\r\n            while (true) {\r\n                patch = this.getPatch(input);\r\n                if (typeof patch === \"string\") {\r\n                    break;\r\n                }\r\n                input = input.slice(0, input.length - 1);\r\n            }\r\n            this._inputStr = input;\r\n            this._patch = patch;\r\n            let str = input + \" \" + patch;\r\n            if (str === \" \") {\r\n                str = \"\";\r\n            }\r\n            this._lastStr = str;\r\n            this.setNodeName(str);\r\n        }\r\n        else if (now.length < last.length) {\r\n            let delNum = last.length - now.length;\r\n            let input = this._inputStr;\r\n            if (delNum >= input.length) {\r\n                this._inputStr = \"\";\r\n                this._lastStr = \"\";\r\n                this.setNodeName(\"\");\r\n                return;\r\n            }\r\n            let patch = false;\r\n            input = this._inputStr.slice(0, this._inputStr.length - delNum);\r\n            while (true) {\r\n                patch = this.getPatch(input);\r\n                if (typeof patch === \"string\") {\r\n                    break;\r\n                }\r\n                input = input.slice(0, input.length - 1);\r\n            }\r\n            // if (!patch) {\r\n            //     // this.nodeName = this._lastStr;\r\n            //     this.setNodeName(this._lastStr);\r\n            //     return;\r\n            // }\r\n            // cc.log(\"3\");\r\n            this._inputStr = input;\r\n            this._patch = patch;\r\n            let str = input + \" \" + patch;\r\n            if (str === \" \") {\r\n                str = \"\";\r\n            }\r\n            this._lastStr = str;\r\n            this.setNodeName(str);\r\n        }\r\n    },\r\n\r\n    setNodeName: function (str) {\r\n        this._flag = true;\r\n        this.nodeName = str;\r\n        this._flag = false;\r\n    },\r\n\r\n    getPatch: function (input) {\r\n        let arr = this.getNodeNameArr;\r\n        if (input === \"\") {\r\n            return \"\";\r\n        }\r\n        for (let i = 0; i < arr.length; i++) {\r\n            let str = arr[i];\r\n            let tmpArr = str.split(input);\r\n            if (tmpArr.length > 1 && tmpArr[0] === \"\") {\r\n                let ans = str.slice(input.length);\r\n                // cc.log(\"ans\", ans, typeof ans);\r\n                return ans;\r\n            }\r\n        }\r\n        return false;\r\n    },  \r\n\r\n    updateNodeData: function () {\r\n        let arr = [];\r\n        let fun = function (node) {\r\n            if (node.name[0] === \"_\") {\r\n                arr.push(node.name.slice(1));\r\n            }\r\n            let nodeArr = node.getChildren();\r\n            for (var i = nodeArr.length - 1; i >= 0; i--) {\r\n                fun(nodeArr[i]);\r\n            }\r\n        }\r\n        if (CC_EDITOR) {\r\n            var node = cc.director.getScene().getChildren()[0];\r\n            fun(node);\r\n        }\r\n        this.getNodeNameArr = arr;\r\n    },\r\n\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    editor: {\r\n        menu: \"dyl/结束画面\",\r\n    },\r\n    properties: {\r\n        stateNodeArr: [cc.Node],\r\n    },\r\n\r\n    __preload: function () {\r\n        this.node.add = (name)=>this.onClick(name);\r\n        let arr = this.stateNodeArr;\r\n        for (var i = arr.length - 1; i >= 0; i--) {\r\n            this[arr[i].name] = arr[i];\r\n            arr[i].active = false;\r\n        }\r\n    },\r\n\r\n    onClick: function (name) {\r\n        if (name) {\r\n            this[name].active = true;\r\n        }\r\n        let node = this.node;\r\n        node.stopAllActions();\r\n        node.active = true;\r\n        node.setScale(2);\r\n        node.opacity = 0;\r\n        // let cfun = cc.callFunc(fun);\r\n        let fade = cc.fadeTo(0.3, 255);\r\n        let scale = cc.scaleTo(0.3, 1);\r\n        node.runAction(cc.spawn(fade, scale));\r\n    },\r\n\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    editor: {\r\n        menu: \"dyl/飙血\",\r\n    },\r\n\r\n    __preload: function () {\r\n        this.initHpLayer();\r\n    },\r\n\r\n    initHpLayer: function () {\r\n        let thisNode = this.node;\r\n        let node = this.node.getChildren()[0];\r\n        // node.__lab = node.getComponent(cc.Label);\r\n        node.__lab = node.getChildren()[0].getComponent(cc.Label);\r\n        node.active = false;\r\n\r\n        let pool = [];\r\n        let delPool = [];\r\n\r\n        delPool.push(node);\r\n        node.del = function () {\r\n            this.active = false;\r\n            delPool.push(this);\r\n            let id = this.__poolId;\r\n            pool[id] = pool[pool.length - 1];\r\n            pool[id].__poolId = id;\r\n            pool.length = pool.length - 1;\r\n            this.__poolId = null;\r\n        }\r\n\r\n        let add = function () {\r\n            let node = null;\r\n            if (delPool.length < 1) {\r\n                cc.log(\"delPool < 1\");\r\n                node = cc.instantiate(pool[0]);\r\n                node.parent = thisNode;\r\n                node.__lab = node.getChildren()[0].getComponent(cc.Label);\r\n\r\n                node.del = function () {\r\n                    this.active = false;\r\n                    delPool.push(this);\r\n                    let id = this.__poolId;\r\n                    pool[id] = pool[pool.length - 1];\r\n                    pool[id].__poolId = id;\r\n                    pool.length = pool.length - 1;\r\n                    this.__poolId = null;\r\n                }\r\n            }\r\n            else {\r\n                cc.log(\"delPool > 0\");\r\n                node = delPool[delPool.length - 1];\r\n                delPool.length = delPool.length - 1;\r\n                node.active = true;\r\n            }\r\n            node.__poolId = pool.length;\r\n            pool.push(node);\r\n            cc.log(\"delPool\", node);\r\n            return node;\r\n        };\r\n\r\n        this.node.add = function (p, num) {\r\n            let color = null;\r\n            num = Math.floor(num);\r\n            // if (num > 0) {\r\n            //     color = cc.color(0, 255, 0);\r\n            // }\r\n            // else if (num === 0) {\r\n            //     color = cc.color(255, 255, 255);\r\n            // }\r\n            // else {\r\n            //     color = cc.color(255, 0, 0);\r\n            // }\r\n            let node = add();\r\n            node.setScale(0);\r\n            node.stopAllActions();\r\n            // node.color = color;\r\n            node.setPosition(p);\r\n            node.__lab.string = String(num);\r\n            // let moveBy = cc.moveBy(0.6, cc.p(0, 200));\r\n            let scale1 = cc.scaleTo(0.1, 1.15);\r\n            let scale2 = cc.scaleTo(0.3, 1);\r\n            // let scale3 = cc.scaleTo(0.2, 1);\r\n            let cfun = cc.callFunc(()=>{\r\n                node.del();\r\n            })\r\n            let seq = cc.sequence(scale1, scale2, cfun);\r\n            node.runAction(seq);\r\n        };\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    editor: {\r\n        menu: \"dyl/文字\",\r\n    },\r\n    properties: {\r\n    },\r\n\r\n    __preload: function () {\r\n        this.initLab();\r\n    },\r\n\r\n    initLab: function () {\r\n        let arr = this.node.getChildren();\r\n        for (var i = arr.length - 1; i >= 0; i--) {\r\n            let node = arr[i];\r\n            let name = node.name;\r\n            if (!node.getComponent(cc.Label)) {\r\n                this.node[name] = node;\r\n                continue;\r\n            }\r\n            this.node[\"__lab\" + name] = node.getComponent(cc.Label);\r\n            if (typeof this.node[name] !== \"undefined\") {\r\n                this.node[\"__\" + name] = this.node[name];\r\n            }\r\n            else {\r\n                this.node[\"__\" + name] = this.node[\"__lab\" + name].string;\r\n            }\r\n            Object.defineProperty(this.node, name, {\r\n                get: function () {\r\n                    return this[\"__\" + name];\r\n                },\r\n                set: function (data) {\r\n                    if (typeof data === \"number\" && this[\"__\" + name] !== data) {\r\n                        // cc.log(typeof this[\"__\" + name], typeof data, this[\"__\" + name], data);\r\n                        let lab = this[\"__lab\" + name].node;\r\n                        lab.scaleChangeId = lab.scaleChangeId ? lab.scaleChangeId + 1 : 1;\r\n                        lab.setScale(1.2);\r\n                        setTimeout(()=>{\r\n                            lab.scaleChangeId--;\r\n                            if (!lab.scaleChangeId) {\r\n                                if (cc.isValid(lab)) {\r\n                                    lab.setScale(1);\r\n                                }\r\n                            }\r\n                        }, 100);\r\n                    }\r\n                    this[\"__\" + name] = data;\r\n                    this[\"__lab\" + name].string = String(this[\"__\" + name]);\r\n                }\r\n            })  \r\n            this.node[name] = this.node[\"__\" + name];\r\n        }\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        d: 150,\r\n        cd: 2,\r\n        h: 400,\r\n    },\r\n\r\n    onLoad: function () {\r\n        let top = this.node.getChildByName(\"arr\");\r\n        let nodeArr = top.getChildren();\r\n        let oriX = -(nodeArr.length - 1) * 0.5 * this.d;\r\n        for (var i = nodeArr.length - 1; i >= 0; i--) {\r\n            nodeArr[i].x = i * this.d + oriX;\r\n        }\r\n        this.nodeArr = nodeArr;\r\n        // cc.log(this.nodeArr);\r\n        this.r = 0;\r\n\r\n        this.initTouch();\r\n    },\r\n\r\n    initTouch: function () {\r\n        this.node.on(\"touchstart\", ()=>{\r\n            // if (this.node.endFun) {\r\n            //     this.node.endFun();\r\n            // }\r\n            this.node.destroy();\r\n            dyl.__isLoading = false;\r\n        });\r\n    },\r\n\r\n    update: function (dt) {\r\n        this.r = this.r + (dt / this.cd);\r\n        for (var i = this.nodeArr.length - 1; i >= 0; i--) {\r\n            let node = this.nodeArr[i];\r\n            let r = this.r + i * (8 / this.nodeArr.length);\r\n            this.nodeArr[i].y = Math.sin(r) * this.h;\r\n        }\r\n        if (dyl.addAd()) {\r\n            this.node.active = false;\r\n            this.node.destroy();\r\n            // dyl.__adFun();\r\n            dyl.__isLoading = false;\r\n        }\r\n    },\r\n});\r\n","let Effect = cc.Enum({\r\n    Null: 0,\r\n    SmallBig: 1,\r\n    Red: 2,\r\n    Shake: 3,\r\n});\r\n\r\nlet LoadData = cc.Class({\r\n    name: \"LoadData\",\r\n    properties: {\r\n        path: \"\",\r\n        loadArrName: \"\",\r\n        parent: cc.Node,\r\n        callBack: {\r\n            default: function() {\r\n                return new cc.Component.EventHandler;\r\n            },\r\n            type: cc.Component.EventHandler,\r\n        }\r\n    }\r\n});\r\n\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n    editor: {\r\n        menu: \"dyl/多功能\",\r\n        executeInEditMode: true,\r\n    },\r\n    properties: {\r\n    \t// rand: 0,\r\n        // isBindNode: false,\r\n        touch: \"\", \r\n        // run: false,\r\n        // act: {\r\n        //     default: Effect.Null,\r\n        //     type: cc.Enum(Effect)\r\n        // },\r\n        isPhysics: {\r\n            default: false,\r\n            notify() {\r\n                this._refresh();\r\n            }\r\n        },\r\n        isShowDebug: {\r\n        \tdefault: false,\r\n        \tvisible: false,\r\n        },\r\n        gravity: {\r\n        \tdefault: cc.p(0, -320),\r\n        \tvisible: false,\r\n        },\r\n\r\n        isLoad: {\r\n            default: false,\r\n            notify() {\r\n                this._refresh();\r\n            },\r\n            visible: false\r\n        },\r\n\r\n        loadDataArr: { // 是dyl 后面的变量，一个数组，代表要加载的内容\r\n            default: [],\r\n            type: LoadData,\r\n            visible: false,\r\n            notify(){\r\n                for (let i = 0; i < this.loadDataArr.length; i++) {\r\n                    let callBack = this.loadDataArr[i].callBack;\r\n                    if (!callBack.target) {\r\n                        callBack.target = this.node;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        loadDataCallBack: { //加载完后的函数，一般是启动函数\r\n            default: function() {\r\n                return new cc.Component.EventHandler;\r\n            },\r\n            type: cc.Component.EventHandler,\r\n            visible: false\r\n        }, \r\n\r\n        // loadData: {\r\n        //     default: \"\", \r\n        //     visible: false,\r\n        // },\r\n\r\n        // loadAfterFun: {\r\n        //     default: null,\r\n        //     type: cc.Component.EventHandler,\r\n        //     visible: false\r\n        // },\r\n\r\n        // if (this.popEvent && (this.popEvent.handler !== '')) {\r\n        //     this.popEvent.emit();\r\n        // }\r\n    },\r\n\r\n    _refresh: function () {\r\n        if (CC_EDITOR) {\r\n            // cc.log(1);\r\n            cc.Class.Attr.setClassAttr(this, 'isShowDebug', 'visible', this.isPhysics);\r\n            // cc.log(2);\r\n            cc.Class.Attr.setClassAttr(this, 'gravity', 'visible', this.isPhysics);\r\n            // cc.log(3);\r\n            // cc.Class.Attr.setClassAttr(this, 'loadData', 'visible', this.isLoad);\r\n            // cc.log(4);\r\n            // cc.Class.Attr.setClassAttr(this, 'loadAfterFun', 'visible', this.isLoad);\r\n            // cc.log(5);\r\n            cc.Class.Attr.setClassAttr(this, 'loadDataArr', 'visible', this.isLoad);\r\n            // cc.log(6);\r\n            cc.Class.Attr.setClassAttr(this, 'loadDataCallBack', 'visible', this.isLoad);\r\n            // cc.log(\"_refresh\");\r\n        }\r\n    },\r\n\r\n    __preload: function () {\r\n        // dyl.dyl = [\"sprs\"];\r\n        // dyl.hjm = [\"lab1\", \"lab2\", \"lab3\"];\r\n        if (CC_EDITOR) {\r\n            // setTimeout(()=>this._refresh(), 100);\r\n            if (!this.loadDataCallBack.target) {\r\n                this.loadDataCallBack.target = this.node;\r\n            }\r\n            this._refresh();\r\n        }\r\n        else {\r\n            this.myInit();\r\n        }\r\n    },\r\n\r\n    emitCallBack: function(callBack, data) {\r\n        let js = callBack.target.getComponent(callBack.component);\r\n        js && js[callBack.handler] && js[callBack.handler](data);\r\n    },\r\n\r\n    onEnable: function () {\r\n    },\r\n \r\n    initPhysics: function () {\r\n        if (!this.isPhysics) {\r\n            return;\r\n        }\r\n        cc.director.getPhysicsManager().enabled = true;\r\n        if (this.isShowDebug) {\r\n            cc.director.getPhysicsManager().debugDrawFlags = cc.PhysicsManager.DrawBits.e_aabbBit |\r\n                cc.PhysicsManager.DrawBits.e_pairBit |\r\n                cc.PhysicsManager.DrawBits.e_centerOfMassBit |\r\n                cc.PhysicsManager.DrawBits.e_jointBit |\r\n                cc.PhysicsManager.DrawBits.e_shapeBit;\r\n        }\r\n        else {\r\n            cc.director.getPhysicsManager().debugDrawFlags = 0;\r\n        }\r\n        cc.director.getPhysicsManager().gravity = this.gravity;\r\n    },\r\n\r\n    myInit: function () {\r\n        if (this.isLoad) {\r\n            this.setLoad();\r\n        }\r\n        this.initPhysics();\r\n        // if (this.act !== Effect.Null) {\r\n        //     this.setAct();\r\n        // }\r\n        // if (this.isBindNode) {\r\n        //     this.bindNode(cc.director.getScene().getChildren()[0]);\r\n        // }\r\n        if (this.touch !== \"\") {\r\n            this.setTouch();\r\n        }\r\n        // if (this.run) {\r\n        //     this.setRun();\r\n        // }\r\n        // if (this.rand) {\r\n        // \tthis.setRand();\r\n        // }\r\n    },\r\n\r\n    loadArr: function(path, loadArrName, parent, callBack, endFun) {\r\n        let arr = dyl[loadArrName];\r\n        let ansArr = [];\r\n        if (arr.length === 0) {\r\n            // callBack(ansArr);\r\n            this.emitCallBack(callBack, ansArr);\r\n            return;\r\n        }\r\n        let num = arr.length;\r\n        for (let i = arr.length - 1; i >= 0; i--) {\r\n            let name = arr[i];\r\n            if (path !== \"\") {\r\n                name = path + \"/\" + name;\r\n\r\n            }\r\n            cc.loader.loadRes(name, (err, prefab)=>{\r\n                let node = cc.instantiate(prefab);\r\n                ansArr[i] = node;\r\n                node.parent = parent;\r\n                num--;\r\n                if (num === 0) {\r\n                    this.emitCallBack(callBack, ansArr);\r\n                    endFun();\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    setLoad: function() {\r\n        let num = this.loadDataArr.length;\r\n        for (let i = 0; i < this.loadDataArr.length; i++) {\r\n            let {path, loadArrName, parent, callBack} = this.loadDataArr[i];\r\n            this.loadArr(path, loadArrName, parent, callBack, ()=>{\r\n                num--;\r\n                if (num === 0) {\r\n                    this.emitCallBack(this.loadDataCallBack, null);\r\n                }\r\n            })\r\n        }\r\n    },\r\n\r\n\r\n    // setLoad: function () {\r\n    // \tthis.__loadEnd = false;\r\n    //     let arr = dyl[this.loadData];\r\n    //     let data = {};\r\n    //     let ans = [];\r\n    //     let num = arr.length;\r\n\r\n    //     let loadFunArr = [];\r\n\r\n    //     this.node.load = (fun)=>{\r\n    //     \tif (this.__loadEnd) {\r\n    //     \t\treturn fun(ans);\r\n    //     \t}\r\n    //     \telse {\r\n    //         \tloadFunArr.push(fun);\r\n    //     \t}\r\n    //     \treturn;\r\n    //     }\r\n\r\n    //     let endLoad = ()=>{\r\n    //         for (let i = loadFunArr.length - 1; i >= 0; i--) {\r\n    //             loadFunArr[i](ans);\r\n    //         }\r\n    //         if (this.loadAfterFun && (this.loadAfterFun.handler !== '')) {\r\n    //             this.loadAfterFun.emit();\r\n    //         }\r\n    //     }\r\n\r\n    //     for (let i = arr.length - 1; i >= 0; i--) {\r\n    //         let name = arr[i];\r\n    //         if (data[name]) {\r\n    //             let node = cc.instantiate(data[name]);\r\n    //             ans[i] = node;\r\n    //             num--;\r\n    //             if (num === 0) {\r\n    //                 endLoad();\r\n    //             }\r\n    //         }\r\n    //         else {\r\n    //             cc.loader.loadRes(name, (err, prefab)=>{\r\n    //                 data[name] = prefab;\r\n    //                 let node = cc.instantiate(prefab);\r\n    //                 ans[i] = node;\r\n    //                 num--;\r\n    //                 if (num === 0) {\r\n    //                     this.scheduleOnce(endLoad, 0);\r\n    //                 }\r\n    //             });\r\n    //         }\r\n    //     }\r\n\r\n    //     this.__loadData = data;\r\n    // },\r\n\r\n    onDestroy: function () {    \r\n        let data = this.__loadData;\r\n        for (let i in data) {\r\n            cc.loader.releaseRes(i);\r\n        }\r\n    },\r\n\r\n    bindNode: function (node) {\r\n        if (node.name[0] === \"_\") {\r\n            this.node[node.name] = node;\r\n        }\r\n        let arr = node.getChildren();\r\n        for (var i = arr.length - 1; i >= 0; i--) {\r\n            this.bindNode(arr[i]);\r\n        }\r\n    },\r\n\r\n    setTouch: function () {\r\n        let node = this.node;\r\n        if (!this.node.touch) {\r\n            this.node.touch = \"touch\";\r\n        }\r\n        let js = this.node.getComponent(this.touch);\r\n        let nowTouchState = this.node.touch;\r\n\r\n        let fun = function (event){\r\n            let pos = event.getLocation();\r\n            pos = cc.p(node.convertToNodeSpace(pos));\r\n            let size = node.getContentSize();\r\n            let [w, h] = [size.width, size.height];\r\n            [w, h] = [w / 2, h / 2];\r\n            pos.subSelf(cc.p(w, h));\r\n\r\n            pos.in = function () { //判断当前节点是否在node里面\r\n                let {x, y} = this;\r\n                let checkIn = function (node) {\r\n                    if (!node) {\r\n                        return null;\r\n                    }\r\n                    node = node.node ? node.node : node;\r\n                    let [nx, ny] = [node.x, node.y];\r\n                    let size = node.getContentSize();\r\n                    let [w, h] = [size.width, size.height];\r\n                    [w, h] = [w / 2, h / 2];\r\n                    w = Math.abs(node.scaleX * w);\r\n                    h = Math.abs(node.scaleY * h);\r\n                    // cc.log(x, y, nx, ny, w, h);\r\n                    return (x >= (nx - w) && x < (nx + w) && y >= (ny - h) && y < (ny + h));\r\n                };\r\n                let len = arguments.length;\r\n                for (let i = 0; i < len; i++) {\r\n                    if (checkIn(arguments[i])) {\r\n                        return arguments[i];\r\n                    }\r\n                }\r\n                return null;\r\n            };\r\n            return pos;\r\n        };\r\n\r\n        let data = {};\r\n        this.node.on(\"touchstart\", function (event) {\r\n            if (!node.touch) {\r\n                data = null;\r\n                return null;\r\n            }\r\n            nowTouchState = node.touch;\r\n            let pos = fun(event);\r\n            if (js[node.touch + \"On\"]) {\r\n                data = js[node.touch + \"On\"](pos);\r\n            }\r\n            else {\r\n                data = {};\r\n            }\r\n        })\r\n\r\n        this.node.on (\"touchmove\", function (event) {\r\n            if (!data) {\r\n                return null;\r\n            }\r\n            if (nowTouchState !== node.touch) {\r\n                return null;\r\n            }\r\n            let pos = fun(event);\r\n            if (js[node.touch + \"Move\"]) {\r\n                data = js[node.touch + \"Move\"](pos, data);\r\n            }\r\n            else {\r\n                data = {};\r\n            }\r\n        }, this);\r\n\r\n        this.node.on (\"touchend\", function (event) {\r\n            if (!data) {\r\n                return null;\r\n            }\r\n            if (nowTouchState !== node.touch) {\r\n                return null;\r\n            }\r\n            let pos = fun(event);\r\n            if (js[node.touch + \"End\"]) {\r\n                data = js[node.touch + \"Up\"](pos, data);\r\n                return;\r\n            }\r\n            if (js[node.touch + \"Up\"]) {\r\n                data = js[node.touch + \"Up\"](pos, data);\r\n            }\r\n            else {\r\n                data = {};\r\n            }\r\n        }, this);\r\n\r\n        this.node.on (\"touchcancel\", function (event) {\r\n            if (!data) {\r\n                return null;\r\n            }\r\n            if (nowTouchState !== node.touch) {\r\n                return null;\r\n            }\r\n            let pos = fun(event);\r\n            if (js[node.touch + \"End\"]) {\r\n                data = js[node.touch + \"Up\"](pos, data);\r\n                return;\r\n            }\r\n            if (js[node.touch + \"Out\"]) {\r\n                data = js[node.touch + \"Out\"](pos, data);\r\n            }\r\n            else {\r\n                data = {};\r\n            }\r\n        }, this);\r\n    },\r\n\r\n    setRun: function () {\r\n        let self = this;\r\n        this.node.run = function () {\r\n            let root = function (){};\r\n            let node0 = arguments[0];\r\n            let createFun = function (act, endFun) {\r\n                // let fun = endFun;\r\n                let fun = function () {\r\n                    act();\r\n                    endFun();\r\n                }        \r\n                return fun; \r\n            };\r\n            let createJsFun = function (act, endFun) {\r\n                // let fun = endFun;\r\n                let fun = function () {\r\n                    self.node.js[act]();\r\n                    endFun();\r\n                }        \r\n                return fun; \r\n            };\r\n            let createArr = function (act, endFun) {\r\n                let fun = function () {\r\n                // let counter = dyl.counter(endFun);\r\n                    let arr = act;\r\n                    arr.push(()=>null);\r\n                    let counterNum = arr.length;\r\n                    let delFun = ()=>{\r\n                        counterNum--;\r\n                        if (counterNum <= 0) {\r\n                            endFun();\r\n                        }\r\n                    }\r\n                    for (let i = 0; i < arr.length; i++) {\r\n                        create(arr[i], ()=>{\r\n                            // counter.del();\r\n                            delFun();\r\n                        })();\r\n                    }\r\n                }\r\n                return fun;\r\n            };\r\n            let createOther = function (act, endFun) {\r\n                // cc.log(\"createOther\", act.node);\r\n                let fun = function () {\r\n                    let node = act.node;\r\n                    if (node.node) {\r\n                        node = node.node;\r\n                    }\r\n                    if (act.add && (act.add > 0)) {\r\n                        act.easing(cc.easeIn(act.add));\r\n                    }\r\n                    else if (act.add && (act.add < 0)) {\r\n                        let inout = cc.easeInOut(-act.add);\r\n                    // cc.log(\"iiiiii\", -act.add, inout);\r\n                        act.easing(cc.easeInOut(-act.add));\r\n                    }\r\n                    let cfun = cc.callFunc(()=>{\r\n                        endFun();\r\n                    });\r\n                    let seq = cc.sequence(act, cfun);\r\n                    node.runAction(seq);\r\n                }\r\n                return fun;\r\n            };\r\n            let createMove = function (act, endFun) {\r\n                let fun = function () {\r\n                    let node = node0;\r\n                    if (node.node) {\r\n                        node = node.node;\r\n                    }\r\n                    if (act.add && (act.add > 0)) {\r\n                        act.easing(cc.easeIn(act.add));\r\n                    }\r\n                    else if (act.add && (act.add < 0)) {\r\n                        let inout = cc.easeInOut(-act.add);\r\n                    // cc.log(\"iiiiii\", -act.add, inout);\r\n                        act.easing(cc.easeInOut(-act.add));\r\n                    }\r\n                    let cfun = cc.callFunc(endFun);\r\n                    let seq = cc.sequence(act, cfun);\r\n                    node.runAction(seq);\r\n                }\r\n                return fun;\r\n            };\r\n            let createDelay = function (act, endFun) {\r\n                let fun = function () {\r\n                    let node = node0;\r\n                    if (node.node) {\r\n                        node = node.node;\r\n                    }\r\n                    let delay = cc.delayTime(act);\r\n                    let cfun = cc.callFunc(endFun);\r\n                    let seq = cc.sequence(delay, cfun);\r\n                    node.runAction(seq);\r\n                }   \r\n                return fun;\r\n            };\r\n            let create = function (act, endFun) {\r\n                // cc.log(act, act.node);\r\n                if (typeof act === \"function\") {\r\n                    return createFun(act, endFun);\r\n                }\r\n                else if (typeof act === \"number\") {\r\n                    return createDelay(act, endFun);\r\n                }\r\n                else if (typeof act === \"string\") {\r\n                    return createJsFun(act, endFun);\r\n                }\r\n                else if (Array.isArray(act)) {\r\n                    return createArr(act, endFun);\r\n                }\r\n                else if (act.node) {\r\n                    return createOther(act, endFun);\r\n                }\r\n                else {\r\n                    return createMove(act, endFun);\r\n                }\r\n            };\r\n            for (let i = arguments.length - 1; i > 0; i--) {\r\n            // cc.log(\"arg\", i);\r\n                let act = arguments[i];\r\n                root = create(act, root);\r\n            }\r\n        // cc.log(\"root\", root);\r\n            root();\r\n        }\r\n    },\r\n\r\n    setRand: function () {\r\n    \tlet __randNum = this.rand;\r\n    \tlet maxNum = 4671341;\r\n    \tthis.node.rand = function (n) {\r\n    \t\t__randNum = (30853 * __randNum + 253) % maxNum;\r\n    \t\tlet r = __randNum / maxNum;\r\n    \t\tif (n) {\r\n    \t\t\treturn Math.floor(r * n);\r\n    \t\t}\r\n    \t\telse {\r\n    \t\t\treturn r;\r\n    \t\t}\r\n    \t}\r\n    \tthis.node.rand.set = function (num) {\r\n    \t\t__randNum = num;\r\n    \t}\r\n    },\r\n\r\n    setAct: function () {\r\n        let __oriScale = this.node.getScale();\r\n        let {r, g, b} = this.node.color;\r\n        let __oriColor = cc.color(r, g, b);\r\n        let __seq = null;\r\n        let __red = 0;\r\n\r\n\r\n        this.node.act = ()=>{\r\n            if (this.act === Effect.SmallBig) {\r\n                if (__seq) {\r\n                    this.node.stopAction(__seq);\r\n                    this.node.setScale(__oriScale);\r\n                }\r\n                let scale1 = cc.scaleTo(0.2, 1.2 * __oriScale);\r\n                scale1.easing(cc.easeQuadraticActionInOut());\r\n                let scale2 = cc.scaleTo(0.2, 1 * __oriScale);\r\n                scale2.easing(cc.easeQuadraticActionInOut());\r\n                let cfun = cc.callFunc(()=>{\r\n                    __seq = null;\r\n                })\r\n                let seq = cc.sequence(scale1, scale2, cfun);\r\n                __seq = seq;\r\n                this.node.runAction(seq);\r\n            }\r\n            else if (this.act === Effect.Red) {\r\n                __red++;\r\n                this.node.color = cc.color(255, 0, 0);\r\n                setTimeout(()=>{\r\n                    __red--;\r\n                    if (!__red) {\r\n                        if (cc.isValid(this.node)) {\r\n                            this.node.color = __oriColor;\r\n                        }\r\n                    }\r\n                }, 60);\r\n            }\r\n            else if (this.act === Effect.Shake) {\r\n                \r\n            }\r\n        }\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    editor: {\r\n        menu: \"dyl/对象池\",\r\n    },\r\n    properties: {\r\n    },\r\n\r\n    __preload: function () {\r\n        this.initPool();\r\n    },\r\n\r\n    initPool: function () {\r\n        let node = this.node.getChildren()[0];\r\n        node.active = false;\r\n\r\n        let pool = [];\r\n        let delPool = [];\r\n\r\n        delPool.push(node);\r\n        node.del = function () {\r\n            this.active = false;\r\n            delPool.push(this);\r\n            let id = this.__poolId;\r\n            pool[id] = pool[pool.length - 1];\r\n            pool[id].__poolId = id;\r\n            pool.length = pool.length - 1;\r\n            this.__poolId = null;\r\n        }\r\n\r\n        this.node.add = function () {\r\n            // cc.log(\"addd\");\r\n            let node = null;\r\n            if (delPool.length < 1) {\r\n                node = cc.instantiate(pool[0]);\r\n                node.parent = this;\r\n\r\n                node.del = function () {\r\n                    this.active = false;\r\n                    delPool.push(this);\r\n                    let id = this.__poolId;\r\n                    pool[id] = pool[pool.length - 1];\r\n                    pool[id].__poolId = id;\r\n                    pool.length = pool.length - 1;\r\n                    this.__poolId = null;\r\n                }\r\n            }\r\n            else {\r\n                // cc.log(\"大于1\");\r\n                node = delPool[delPool.length - 1];\r\n                delPool.length = delPool.length - 1;\r\n                node.active = true;\r\n            }\r\n            node.__poolId = pool.length;\r\n            pool.push(node);\r\n            // cc.log(\"成功添加\");\r\n            return node;\r\n        }\r\n        this.node.pool = pool;\r\n    },\r\n\r\n});\r\n","\"use strict\";\r\n\r\n// var cc = {};\r\n\r\n// dyl = dyl ? dyl : {};\r\n// if (!window.dyl) {\r\n//     window.dyl = {};\r\n// }\r\n\r\n// cc.Class({\r\n//     extends: cc.Component,\r\n\r\n//     properties: {\r\n//     },\r\n\r\n//     __preload () {\r\n//         this.dylInit();\r\n//         // let data = dyl.data.enData[name];\r\n//         // this.node.hp = Number(data.hp);\r\n//         // this.node.def = Number(data.def);\r\n//         // this.node.atk = Number(data.atk);\r\n//         // this.node.atkFun = data.atkFun;\r\n//         // this.node.defFun = data.defFun;\r\n//     },\r\n\r\n\r\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\r\n\r\nwindow.initDylFun = function (cryptoJS) {\r\n    cc.log(\"initDylFun\", cryptoJS);\r\n    window.dyl = window.dyl || {};\r\n    window.dyl.__debug = {};\r\n    Object.defineProperty(dyl, \"debug\", {\r\n        get: function get() {\r\n            return this.__debug[\"default\"];\r\n        },\r\n        set: function set(str) {\r\n            var arr = str.split(\" \");\r\n            this.__debug[arr[0]] = arr[arr.length - 1];\r\n            this.__debug[\"default\"] = arr[arr.length - 1];\r\n            cc.log(\"scene name = \", cc.director.getScene().name);\r\n            cc.director.loadScene(cc.director.getScene().name);\r\n        }\r\n    });\r\n\r\n    dyl.getSize = function (node) {\r\n        node = node.node ? node.node : node;\r\n        var size = node.getContentSize();\r\n        var w = size.width;\r\n        var h = size.height;\r\n\r\n        return cc.p(w, h);\r\n    };\r\n\r\n    dyl.addMap = function (w, h, fun) {\r\n        var map = [];\r\n        for (var y = 0; y < h; y++) {\r\n            // map[y] = [];\r\n            var arr = [];\r\n            for (var x = 0; x < w; x++) {\r\n                // map[y][x] = fun ? fun(cc.p(x, y)) : null;\r\n                // cc.log(x, y, map[y][x]);\r\n                var val = fun ? fun(cc.p(x, y)) : null;\r\n                arr.push(val);\r\n            }\r\n\r\n            // map[y].push(arr);\r\n            map.push(arr);\r\n        }\r\n        map.w = w;\r\n        map.h = h;\r\n        map.get = function (p, name) {\r\n            if (!p) {\r\n                return false;\r\n            }\r\n            if (p.x < 0 || p.y < 0 || p.x >= this.w || p.y >= this.h) {\r\n                return false;\r\n            }\r\n            if (!name) {\r\n                return this[p.y][p.x];\r\n            }\r\n            if (this[p.y][p.x]) {\r\n                return this[p.y][p.x][name];\r\n            }\r\n            return this[p.y][p.x];\r\n        };\r\n        map.set = function (p, value) {\r\n            if (!p) {\r\n                return false;\r\n            }\r\n            if (p.x < 0 || p.y < 0 || p.x >= this.w || p.y >= this.h) {\r\n                // cc.log(p, this.w, this.h);\r\n                cc.warn(\"p不在地图上\");\r\n                return false;\r\n            }\r\n            var ans = map[p.y][p.x];\r\n            map[p.y][p.x] = value;\r\n            return ans;\r\n        };\r\n        map.find = function (value) {\r\n            for (var y = 0; y < this.h; y++) {\r\n                for (var x = 0; x < this.w; x++) {\r\n                    if (this[y][x] === value) {\r\n                        return cc.p(x, y);\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        map.run = function (fun) {\r\n            var arr = [];\r\n            for (var y = 0; y < this.h; y++) {\r\n                for (var x = 0; x < this.w; x++) {\r\n                    var p = fun(cc.p(x, y));\r\n                    (p || p === 0) && arr.push(p);\r\n                }\r\n            }\r\n            return arr;\r\n        };\r\n        return map;\r\n    };\r\n\r\n    dyl.addMapLayer = function (w, h, d) {\r\n        var x = (1 - w) * d / 2;\r\n        var y = (1 - h) * d / 2;\r\n        var ori = cc.p(x, y);\r\n        // cc.log(\"ori\", ori.x, ori.y, w, h, d);\r\n        var fun = function fun(p) {\r\n            //创建函数\r\n            var v = ori.add(p.mul(d));\r\n            // cc.log(v.x, v.y);\r\n            return v;\r\n        };\r\n        var map = this.addMap(w, h, fun);\r\n        map.ori = ori.sub(cc.p(d / 2, d / 2)); //最左下角\r\n        //map.w = w;\r\n        //map.h = h;\r\n        map.d = d;\r\n        var checkIn = function checkIn(p) {\r\n            var maxX = map.w * map.d / 2;\r\n            var maxY = map.h * map.d / 2;\r\n\r\n            return p.x >= -maxX && p.y >= -maxY && p.x < maxX && p.y < maxY;\r\n        };\r\n        map.find = function (p) {\r\n            if (!checkIn(p)) {\r\n                return false;\r\n            }\r\n            p = cc.p(p.x, p.y);\r\n            p.subSelf(this.ori);\r\n            p.mulSelf(1 / d);\r\n            p.x = Math.floor(p.x);\r\n            p.y = Math.floor(p.y);\r\n            return p;\r\n        };\r\n        return map;\r\n    };\r\n\r\n    var __randNum = 23;\r\n    dyl.setRand = function (num) {\r\n        cc.log(\"seed\", num);\r\n        __randNum = num;\r\n    };\r\n    dyl.rand = function (num) {\r\n        // cc.random0To1();\r\n        if (typeof this.__randNum !== \"number\") {\r\n            this.__randNum = 1;\r\n        }\r\n        var maxNum = 9987617;\r\n        __randNum = (59341 * __randNum + 6541) % maxNum;\r\n        var randNum = __randNum / maxNum;\r\n        if (num) {\r\n            return Math.floor(randNum * num);\r\n        }\r\n        return randNum;\r\n    };\r\n\r\n    // dyl.rand.set = function (num) {\r\n    //     __randNum = num;\r\n    // };\r\n\r\n\r\n    var __encryptFun = function __encryptFun(word) {\r\n        word = String(word);\r\n        var key = cryptoJS.enc.Utf8.parse(\"woaihejiamin\");\r\n        var iv = cryptoJS.enc.Utf8.parse(\"nihaijidewoma\");\r\n        var encrypted = cryptoJS.AES.encrypt(word, key, {\r\n            iv: iv,\r\n            mode: cryptoJS.mode.CBC,\r\n            padding: cryptoJS.pad.Pkcs7\r\n        });\r\n        return cryptoJS.enc.Base64.stringify(encrypted.ciphertext);\r\n    };\r\n\r\n    var __decryptFun = function __decryptFun(word) {\r\n        var key = cryptoJS.enc.Utf8.parse(\"woaihejiamin\");\r\n        var iv = cryptoJS.enc.Utf8.parse(\"nihaijidewoma\");\r\n        var decrypt = cryptoJS.AES.decrypt(word, key, {\r\n            iv: iv,\r\n            mode: cryptoJS.mode.CBC,\r\n            padding: cryptoJS.pad.Pkcs7\r\n        });\r\n        var uncrypted = decrypt.toString(cryptoJS.enc.Utf8).toString();\r\n        var uncryptedNum = parseInt(uncrypted);\r\n        if (uncryptedNum == 0 || uncryptedNum) {\r\n            uncrypted = uncryptedNum;\r\n        }\r\n        return uncrypted;\r\n    };\r\n\r\n    dyl.save = function (name, data) {\r\n        if (data === 0 || data) {\r\n            if (name[0] === \"_\") {\r\n                var str = JSON.stringify(data);\r\n                cc.sys.localStorage.setItem(name, __encryptFun(str));\r\n            } else {\r\n                cc.sys.localStorage.setItem(name, __encryptFun(data));\r\n            }\r\n        } else {\r\n            //删除数据\r\n            cc.sys.localStorage.removeItem(name);\r\n        }\r\n    };\r\n    dyl.read = function (name) {\r\n        //checkIn(p,isT) tposToPos(tp) getTpos(p) getPos(p, isT)\r\n        if (name[0] === \"_\") {\r\n            var data = cc.sys.localStorage.getItem(name);\r\n            if (!data) {\r\n                return data;\r\n            }\r\n            var str = __decryptFun(data);\r\n            return JSON.parse(str);\r\n        }\r\n        var data1 = cc.sys.localStorage.getItem(name);\r\n        if (!data1) {\r\n            return data1;\r\n        }\r\n        return __decryptFun(data1);\r\n    };\r\n    dyl.key = function (data) {\r\n        var keyOnData = {};\r\n        var keyUpData = {};\r\n        if (data.dir) {\r\n            data.w = function (isOn) {\r\n                return data.dir(isOn, cc.p(0, 1));\r\n            };\r\n            data.s = function (isOn) {\r\n                return data.dir(isOn, cc.p(0, -1));\r\n            };\r\n            data.a = function (isOn) {\r\n                return data.dir(isOn, cc.p(-1, 0));\r\n            };\r\n            data.d = function (isOn) {\r\n                return data.dir(isOn, cc.p(1, 0));\r\n            };\r\n\r\n            data.up = function (isOn) {\r\n                return data.dir(isOn, cc.p(0, 1));\r\n            };\r\n            data.down = function (isOn) {\r\n                return data.dir(isOn, cc.p(0, -1));\r\n            };\r\n            data.left = function (isOn) {\r\n                return data.dir(isOn, cc.p(-1, 0));\r\n            };\r\n            data.right = function (isOn) {\r\n                return data.dir(isOn, cc.p(1, 0));\r\n            };\r\n        }\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.KEYBOARD,\r\n            onKeyPressed: function onKeyPressed(keyCode, event) {\r\n                for (var i in data) {\r\n                    if (keyCode === cc.KEY[i]) {\r\n                        if (keyOnData[i] === keyUpData[i]) {\r\n                            data[i](true);\r\n                            keyOnData[i] = !keyOnData[i];\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            },\r\n            // 松开按键时，停止向该方向的加速\r\n            onKeyReleased: function onKeyReleased(keyCode, event) {\r\n                for (var i in data) {\r\n                    if (keyCode === cc.KEY[i]) {\r\n                        data[i](false);\r\n                        keyUpData[i] = keyOnData[i];\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }, cc.director.getScene().getChildren()[0]);\r\n    };\r\n\r\n    dyl.keyOn = function (data) {\r\n        var keyOnData = {};\r\n        var keyUpData = {};\r\n        if (data.dir) {\r\n            data.w = function () {\r\n                return data.dir(cc.p(0, 1));\r\n            };\r\n            data.s = function () {\r\n                return data.dir(cc.p(0, -1));\r\n            };\r\n            data.a = function () {\r\n                return data.dir(cc.p(-1, 0));\r\n            };\r\n            data.d = function () {\r\n                return data.dir(cc.p(1, 0));\r\n            };\r\n\r\n            data.up = function () {\r\n                return data.dir(cc.p(0, 1));\r\n            };\r\n            data.down = function () {\r\n                return data.dir(cc.p(0, -1));\r\n            };\r\n            data.left = function () {\r\n                return data.dir(cc.p(-1, 0));\r\n            };\r\n            data.right = function () {\r\n                return data.dir(cc.p(1, 0));\r\n            };\r\n        }\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.KEYBOARD,\r\n            onKeyPressed: function onKeyPressed(keyCode, event) {\r\n                for (var i in data) {\r\n                    if (keyCode === cc.KEY[i]) {\r\n                        if (keyOnData[i] === keyUpData[i]) {\r\n                            data[i]();\r\n                            keyOnData[i] = !keyOnData[i];\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            },\r\n            // 松开按键时，停止向该方向的加速\r\n            onKeyReleased: function onKeyReleased(keyCode, event) {\r\n                for (var i in data) {\r\n                    if (keyCode === cc.KEY[i]) {\r\n                        // data[i](false);\r\n                        keyUpData[i] = keyOnData[i];\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }, cc.director.getScene().getChildren()[0]);\r\n    };\r\n\r\n    dyl.keyUp = function (data) {\r\n        var keyOnData = {};\r\n        var keyUpData = {};\r\n        if (data.dir) {\r\n            data.w = function () {\r\n                return data.dir(cc.p(0, 1));\r\n            };\r\n            data.s = function () {\r\n                return data.dir(cc.p(0, -1));\r\n            };\r\n            data.a = function () {\r\n                return data.dir(cc.p(-1, 0));\r\n            };\r\n            data.d = function () {\r\n                return data.dir(cc.p(1, 0));\r\n            };\r\n\r\n            data.up = function () {\r\n                return data.dir(cc.p(0, 1));\r\n            };\r\n            data.down = function () {\r\n                return data.dir(cc.p(0, -1));\r\n            };\r\n            data.left = function () {\r\n                return data.dir(cc.p(-1, 0));\r\n            };\r\n            data.right = function () {\r\n                return data.dir(cc.p(1, 0));\r\n            };\r\n        }\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.KEYBOARD,\r\n            onKeyPressed: function onKeyPressed(keyCode, event) {\r\n                for (var i in data) {\r\n                    if (keyCode === cc.KEY[i]) {\r\n                        if (keyOnData[i] === keyUpData[i]) {\r\n                            // data[i]();\r\n                            keyOnData[i] = !keyOnData[i];\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            },\r\n            // 松开按键时，停止向该方向的加速\r\n            onKeyReleased: function onKeyReleased(keyCode, event) {\r\n                for (var i in data) {\r\n                    if (keyCode === cc.KEY[i]) {\r\n                        data[i]();\r\n                        keyUpData[i] = keyOnData[i];\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }, cc.director.getScene().getChildren()[0]);\r\n    };\r\n\r\n    dyl.addDirArr = function () {\r\n        // 499 5479 \r\n        var arr = [cc.p(0, 1), cc.p(0, -1), cc.p(1, 0), cc.p(-1, 0)];\r\n        arr.sort(function () {\r\n            return 0.5 - dyl.rand();\r\n        });\r\n        return arr;\r\n    };\r\n\r\n    dyl.run = function () {\r\n        var self = this;\r\n        // this.node.run = function () {\r\n        var root = function root() {};\r\n        var node0 = arguments[0];\r\n        var endId = 0;\r\n        if (node0.parent && node0.getChildren) {\r\n            endId = 0;\r\n        } else {\r\n            node0 = cc.director.getScene().getChildren()[0];\r\n            endId = -1;\r\n        }\r\n        var createFun = function createFun(act, endFun) {\r\n            // let fun = endFun;\r\n            var fun = function fun() {\r\n                act();\r\n                endFun();\r\n            };\r\n            return fun;\r\n        };\r\n        var createJsFun = function createJsFun(act, endFun) {\r\n            // let fun = endFun;\r\n            var fun = function fun() {\r\n                self.node.js[act]();\r\n                endFun();\r\n            };\r\n            return fun;\r\n        };\r\n        var createArr = function createArr(act, endFun) {\r\n            var fun = function fun() {\r\n                // let counter = dyl.counter(endFun);\r\n                var arr = act;\r\n                arr.push(function () {\r\n                    return null;\r\n                });\r\n                var counterNum = arr.length;\r\n                var delFun = function delFun() {\r\n                    counterNum--;\r\n                    if (counterNum <= 0) {\r\n                        endFun();\r\n                    }\r\n                };\r\n                for (var i = 0; i < arr.length; i++) {\r\n                    create(arr[i], function () {\r\n                        // counter.del();\r\n                        delFun();\r\n                    })();\r\n                }\r\n            };\r\n            return fun;\r\n        };\r\n        var createOther = function createOther(act, endFun) {\r\n            // cc.log(\"createOther\", act.node);\r\n            var fun = function fun() {\r\n                var node = act.node;\r\n                if (node.node) {\r\n                    node = node.node;\r\n                }\r\n                if (act.add && act.add > 0) {\r\n                    act.easing(cc.easeIn(act.add));\r\n                } else if (act.add && act.add < 0) {\r\n                    var inout = cc.easeInOut(-act.add);\r\n                    // cc.log(\"iiiiii\", -act.add, inout);\r\n                    act.easing(cc.easeInOut(-act.add));\r\n                }\r\n                var cfun = cc.callFunc(function () {\r\n                    endFun();\r\n                });\r\n                var seq = cc.sequence(act, cfun);\r\n                node.runAction(seq);\r\n            };\r\n            return fun;\r\n        };\r\n        var createMove = function createMove(act, endFun) {\r\n            var fun = function fun() {\r\n                var node = node0;\r\n                if (node.node) {\r\n                    node = node.node;\r\n                }\r\n                if (act.add && act.add > 0) {\r\n                    act.easing(cc.easeIn(act.add));\r\n                } else if (act.add && act.add < 0) {\r\n                    var inout = cc.easeInOut(-act.add);\r\n                    // cc.log(\"iiiiii\", -act.add, inout);\r\n                    act.easing(cc.easeInOut(-act.add));\r\n                }\r\n                var cfun = cc.callFunc(endFun);\r\n                var seq = cc.sequence(act, cfun);\r\n                node.runAction(seq);\r\n            };\r\n            return fun;\r\n        };\r\n        var createDelay = function createDelay(act, endFun) {\r\n            var fun = function fun() {\r\n                var node = node0;\r\n                if (node.node) {\r\n                    node = node.node;\r\n                }\r\n                var delay = cc.delayTime(act);\r\n                var cfun = cc.callFunc(endFun);\r\n                var seq = cc.sequence(delay, cfun);\r\n                node.runAction(seq);\r\n            };\r\n            return fun;\r\n        };\r\n        var create = function create(act, endFun) {\r\n            // cc.log(act, act.node);\r\n            if (typeof act === \"function\") {\r\n                return createFun(act, endFun);\r\n            } else if (typeof act === \"number\") {\r\n                return createDelay(act, endFun);\r\n            } else if (typeof act === \"string\") {\r\n                return createJsFun(act, endFun);\r\n            } else if (Array.isArray(act)) {\r\n                return createArr(act, endFun);\r\n            } else if (act.node) {\r\n                return createOther(act, endFun);\r\n            } else {\r\n                return createMove(act, endFun);\r\n            }\r\n        };\r\n        for (var i = arguments.length - 1; i > endId; i--) {\r\n            // cc.log(\"arg\", i);\r\n            var act = arguments[i];\r\n            root = create(act, root);\r\n        }\r\n        // cc.log(\"root\", root);\r\n        root();\r\n    };\r\n\r\n    dyl.data = function (key, node) {\r\n        var arr = key.split(\".\");\r\n        var data = dyl._data[arr[0]][arr[1]];\r\n        if (!data) {\r\n            return cc.error(\"没有这个数据\", key);\r\n        }\r\n        // cc.log(\"data\", data, node);\r\n        for (var i in data) {\r\n            if (i !== \"_data\") {\r\n                // cc.log(i, data[i]);\r\n                node[i] = data[i];\r\n            }\r\n        }\r\n        return data._data;\r\n    };\r\n\r\n    dyl.process = function (js, arr) {\r\n        var tab = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n\r\n        var counterId = 0;\r\n        var counterArr = [];\r\n        var nextArr = arr;\r\n        var counter = null;\r\n\r\n        var runChild = function runChild() {\r\n            var i = 0;\r\n            var childCounter = function childCounter() {\r\n                var data = counterArr[i++];\r\n                if (!data) {\r\n                    counterArr.length = 0;\r\n                    return counter();\r\n                }\r\n                var childJs = data.childJs,\r\n                    name = data.name,\r\n                    arrr = data.arrr;\r\n\r\n                childJs[name].apply(childJs, [childCounter].concat(_toConsumableArray(arrr)));\r\n            };\r\n            childCounter();\r\n        };\r\n\r\n        var run = function run() {\r\n            //行动\r\n            if (counterArr.length > 0) {\r\n                return runChild();\r\n            }\r\n            var name = nextArr[counterId++];\r\n            if (!name) {\r\n                //结束了\r\n                return;\r\n            }\r\n            if (typeof name === \"string\") {\r\n                //代表函数\r\n                return js[name](counter);\r\n            }\r\n\r\n            ///下面是子对象了\r\n            for (var i in name) {\r\n                var next = js[i](counter);\r\n                nextArr = name[i][next];\r\n                if (!nextArr) {\r\n                    //找不到了，就是相当于结束流程\r\n                    return;\r\n                }\r\n                counterId = 0;\r\n                counter();\r\n            }\r\n        };\r\n\r\n        var addChild = function addChild(childJs, name, arrr) {\r\n            counterArr.push({\r\n                childJs: childJs,\r\n                name: name,\r\n                arrr: arrr\r\n            });\r\n        };\r\n\r\n        counter = function counter(childJs, name) {\r\n            if (!childJs) {\r\n                run();\r\n            } else {\r\n                for (var _len = arguments.length, arrr = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\r\n                    arrr[_key - 2] = arguments[_key];\r\n                }\r\n\r\n                addChild(childJs, name, arrr);\r\n            }\r\n        };\r\n        for (var i in tab) {\r\n            counter[i] = tab[i];\r\n        }\r\n\r\n        counter();\r\n    };\r\n};\r\n\r\nif (window.initHjmDataFun && window.initHjmFun && window.iscryptoJS) {\r\n    cc.log(\"init dyl\");\r\n    window.initDylFun(window.isCryptoJS);\r\n    window.initHjmFun();\r\n    window.initHjmDataFun();\r\n}\r\n\r\n// });","cc.Class({\r\n    extends: cc.Component,\r\n    editor: {\r\n        menu: \"dyl/瓦块地图\",\r\n    },\r\n    properties: {\r\n    },\r\n\r\n    __preload: function () {\r\n        this.initTileMap();\r\n    },\r\n\r\n    initTileMap: function () {\r\n        let tmx = this.node.getComponent(cc.TiledMap);\r\n        let mapSize = tmx.getMapSize();\r\n        let tileD = tmx.getTileSize().width;\r\n\r\n        this.node.map = dyl.addMap(mapSize.width, mapSize.height);\r\n        this.node.posMap = dyl.addMapLayer(mapSize.width, mapSize.height, tileD);\r\n        //checkIn(p,isT) tposToPos(tp) getTpos(p) getPos(p, isT)\r\n\r\n        this.node.add = function (layerName, fun) {\r\n            let layer = node.getChildByName(layerName).getComponent(cc.TiledLayer);\r\n            if (layer) { //正常的地图，其他是对象\r\n                let size = layer.getLayerSize();\r\n                let d = layer.getMapTileSize().width;\r\n                for (let x = size.width - 1; x >= 0; x--) {\r\n                    for (let y = size.height - 1; y >= 0; y--) {\r\n                        let gid = layer.getTileGIDAt(x, size.height - y - 1);\r\n                        fun(cc.p(x, y), gid);\r\n                    }\r\n                }\r\n                map.d = d;\r\n                return map;\r\n            }\r\n            else {\r\n                layer = tmx.getObjectGroup(layerName);\r\n                let arr = layer.getObjects();\r\n                // cc.log(\"layerName\", arr);\r\n                for (var i = arr.length - 1; i >= 0; i--) {\r\n                    let x = arr[i].x / tileD;\r\n                    let y = arr[i].y / tileD;\r\n                    // fun(arr[i], dyl.newPos(x, mapSize.height - y - 1));\r\n                    fun(cc.p(x, mapSize.height - y - 1), arr[i].name);\r\n                }\r\n            }\r\n        }\r\n    },\r\n});\r\n","let NodeData = cc.Class({\r\n\tname: \"NodeData\",\r\n\tproperties: {\r\n\t\tid: \"\",\r\n\t\tnode: cc.Node,\r\n\t\tp: cc.p(0, 0),\t\t\r\n\t\trotation: 0,\r\n\t\tscaleX: 1,\r\n\t\tscaleY: 1,\r\n\t\t// anchorX: cc.p(0.5, 0.5),\r\n\t\tanchorX: 0.5,\r\n\t\tanchorY: 0.5,\r\n\t\t// size: cc.size(100, 100),/**/\r\n\t\theight: 0.0,\r\n\t\twidth: 0.0,\r\n\t\tcolor: cc.color(255, 255, 255),\r\n\t\topacity: 255,\r\n\t\tskewX: 0,\r\n\t\tskewY: 0,\r\n\t\tactive: true,\r\n        lab: \"\",\r\n\t}\r\n});\r\n\r\nlet NodeDataArr = cc.Class({\r\n\tname: \"NodeDataArr\",\r\n\tproperties: {\r\n\t\t// arr: {\r\n\t\t// \tdefault: [],\r\n\t\t// \ttype: NodeData\r\n\t\t// }\r\n\t\tarr: [NodeData]\r\n\t}\r\n});\r\n\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n    editor: {\r\n        menu: \"dyl/弹窗-保存状态\",\r\n        executeInEditMode: true,\r\n    },\r\n    ctor: function() {\r\n    \tObject.defineProperty(this,\"node\",{//这里的方法名name,就表示定义了一个name属性（因此才能通过object.name访问）,只定义了getter访问器,没有定义[[value]]值\r\n\t\t    get:function (){//只定义了get 特性，因此只能读不能写\r\n\t\t        return undefined;\r\n\t\t    },    \r\n\t\t  \tset:function (node) {\r\n\t\t        delete this.node;\r\n\t\t        this.node = node;\r\n\t\t        this._myInit();\r\n\t\t\t},\r\n\t\t  \tconfigurable: true\r\n\t\t});\r\n    },\r\n    properties: {\r\n    \tdata: {\r\n    \t\tdefault: [],\r\n    \t\ttype: NodeDataArr,\r\n    \t\tvisible: false,\r\n    \t},\r\n    \t// [SaveData],\r\n    \tshowData: {\r\n    \t\tdefault: \"\",\r\n    \t\ttype: cc.String,\r\n    \t\tnotify(){\r\n    \t\t\t// if (this._getString(this.showData) === this._getString(this.))\r\n    \t\t\tlet name = this._getString(this.showData);\r\n    \t\t\tfor (let i = this.stateArr.length - 1; i >= 0; i--) {\r\n    \t\t\t\tif (this._getString(this.stateArr[i]) === name) {\r\n    \t\t\t\t\tthis._read(i);\r\n    \t\t\t\t\treturn;\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n    \t\t}\r\n    \t},\r\n    \t_stateArr:{\r\n    \t\tdefault: [],\r\n    \t\ttype: cc.String\r\n    \t},\r\n    \tstateArr: {\r\n    \t\tdefault: [],\r\n    \t\ttype: cc.String,\r\n    \t\tnotify() {\r\n    \t\t\tfor (let i = this._stateArr.length - 1; i >= 0; i--) {\r\n    \t\t\t\tif (this._stateArr[i] !== this.stateArr[i]) {\r\n    \t\t\t\t\tif (this.stateArr[i] === \" \") {\r\n    \t\t\t\t\t\tthis.stateArr[i] = this._stateArr[i];\r\n    \t\t\t\t\t}\r\n    \t\t\t\t\tthis._save(i);\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n    \t\t\tthis._stateArr.length = 0;\r\n    \t\t\tthis._stateArr.push(...this.stateArr);\t\r\n    \t\t}\r\n    \t},\r\n    },\r\n\r\n    _myInit: function() {\r\n    \t// cc.log(\"stateArr\", this.stateArr);\r\n    \t// let tab = {};\r\n    \t// for (let i = this.stateArr.length - 1; i >= 0; i--) {\r\n    \t// \tlet name = this._getString(this.stateArr[i]);\r\n    \t// \ttab[name] = i;\r\n    \t// }\r\n    \tthis.node.add = (name, time)=>{\r\n            if (!name) {\r\n                return this.myAct(time);\r\n            }\r\n    \t\tname = this._getString(name);\r\n    \t\tfor (let i = this.stateArr.length - 1; i >= 0; i--) {\r\n\t    \t\tif(name === this._getString(this.stateArr[i])) {\r\n\t    \t\t\tthis._read(i);\r\n\t    \t\t\tbreak;\r\n\t    \t\t}\r\n\t    \t}\r\n\t    \tthis.myAct(time);\r\n    \t}\r\n    },\r\n\r\n    myAct: function(time) {\r\n    \tif (!time) {\r\n    \t\treturn;\r\n    \t}\r\n        this.node.active = true;\r\n    \tlet oriScale = this.node.scale;\r\n    \tlet oriOpacity = this.node.opacity;\r\n\r\n    \tlet scaleR = (time > 0) ? 2 : 1;\r\n    \tlet opacityR = (time > 0) ? 0 : 1;\r\n\r\n\r\n    \tlet node = this.node;\r\n        node.stopAllActions();\r\n        node.setScale(oriScale * scaleR);\r\n        node.opacity = oriOpacity * opacityR;\r\n        // let cfun = cc.callFunc(fun);\r\n        let fade = cc.fadeTo(Math.abs(time), oriOpacity * (1 - opacityR));\r\n        let scale = cc.scaleTo(Math.abs(time), oriScale * (3 - scaleR));\r\n        let cfun = cc.callFunc(()=>{\r\n        \tthis.node.opacity = oriOpacity;\r\n        \tthis.node.setScale(oriScale);\r\n        \tthis.node.active = (time > 0);\r\n        });\r\n        let seq = cc.sequence(cc.spawn(fade, scale), cfun);\r\n        node.runAction(seq);\r\n    },\r\n\r\n    _getString: function(str) {\r\n    \treturn str.replace(/\\s+/g,\"\");\r\n    },\r\n\r\n    _read: function(id) {\r\n        if (this._getString(this.stateArr[id]) === \"\") {\r\n            return;\r\n        }\r\n    \t// cc.log(\"read\", id);\r\n    \t// cc.log(this.data);\r\n    \t// for (let i in this.data) {\r\n    \t// \tcc.log(\"i\", i);\r\n    \t// }\r\n    \t// cc.log(this.data[id]);\r\n    \tlet dataArr = this.data[id].arr;\r\n    \t// for (let i = 0; i < dataArr.length; i++) {\r\n    \t// \tcc.log(\"ii\", i, dataArr[i]);\r\n    \t// }\r\n    \tfor (let i = dataArr.length - 1; i >= 0; i--) {\r\n    \t\t// cc.log(\"node\", dataArr[i].node);\r\n    \t\tif (!dataArr[i].node) {\r\n    \t\t\tcontinue;\r\n    \t\t}\r\n    \t\t// cc.log(\"rrreeeddd\");\r\n    \t\tlet node = dataArr[i].node;\r\n    \t\tlet data = dataArr[i];\r\n    \t\tnode.setPosition(data.p);\r\n    \t\tnode.rotation = data.rotation;\r\n    \t\tnode.scaleX = data.scaleX;\r\n    \t\tnode.scaleY = data.scaleY;\r\n    \t\tnode.anchorX = data.anchorX;\r\n    \t\tnode.anchorY = data.anchorY;\r\n    \t\t// node.size = data.size;\r\n    \t\tnode.color = data.color;\r\n    \t\tnode.opacity = data.opacity;\r\n    \t\tnode.skewX = data.skewX;\r\n    \t\tnode.skewY = data.skewY;\r\n    \t\tnode.active = data.active;\r\n            let lab = node.getComponent(cc.Label);\r\n            if (lab) {\r\n                lab.string = data.lab;\r\n            }\r\n    \t\tif (node.name === \"Canvas\") {\r\n    \t\t\tlet canvas = this.node.getComponent(cc.Canvas);\r\n    \t\t\tcanvas.designResolution = cc.size(data.width, data.height);\r\n    \t\t}\r\n    \t\telse {\r\n\t    \t\tnode.height = data.height;\r\n\t    \t\tnode.width = data.width;\r\n    \t\t}\r\n    \t}\r\n    \t//   \tid: \"\",\r\n\t\t// node: cc.Node,\r\n\t\t// p: cc.p(0, 0),\t\t\r\n\t\t// rotation: 0,\r\n\t\t// scaleX: 1,\r\n\t\t// scaleY: 1,\r\n\t\t// anchor: cc.p(0.5, 0.5),\r\n\t\t// size: cc.size(100, 100),\r\n\t\t// color: cc.color(255, 255, 255),\r\n\t\t// opacity: 255,\r\n\t\t// skew: cc.p(0, 0),\r\n\r\n    },\r\n\r\n    _save: function(id) {\r\n    \t// cc.log(\"save\");\r\n    \tthis.data[id] = this._getSaveData();\r\n    \t// for (let i in this.data) {\r\n    \t// \tcc.log(\"i\", i);\r\n    \t// }\r\n    \t// cc.log(this.)\r\n    },\r\n\r\n    _getSaveData: function() {\r\n    \tlet saveData = new NodeDataArr;\r\n    \tsaveData.arr = this._getSaveNodeArr(this.node);\r\n    \treturn saveData;\r\n    },\r\n\r\n    _getSaveNodeArr: function(node) {\r\n    \tlet arr = [this._addNodeData(node)];\r\n    \tlet nodeArr = node.getChildren();\r\n    \tfor (let i = nodeArr.length - 1; i >= 0; i--) {\r\n    \t\tarr.push(...this._getSaveNodeArr(nodeArr[i]));\r\n    \t}\r\n    \treturn arr;\r\n    },\r\n\r\n    _addNodeData: function(node) {\r\n    \tlet nodeData = new NodeData;\r\n    \tnodeData.id = node.name;\r\n    \tnodeData.node = node;\r\n    \tnodeData.p = cc.p(node);\r\n    \tnodeData.rotation = node.rotation;\r\n    \tnodeData.scaleX = node.scaleX;\r\n    \tnodeData.scaleY = node.scaleY;\r\n    \tnodeData.anchorX = node.anchorX;\r\n    \tnodeData.anchorY = node.anchorY;\r\n    \t// nodeData.size = node.size;\r\n    \tnodeData.height = node.height;\r\n    \tnodeData.width = node.width;\r\n    \tnodeData.color = node.color;\r\n    \tnodeData.opacity = node.opacity;\r\n    \tnodeData.skewX = node.skewX;\r\n    \tnodeData.skewY = node.skewY;\r\n    \tnodeData.active = node.active;\r\n        let lab = node.getComponent(cc.Label);\r\n        if (lab) {\r\n            nodeData.lab = lab.string;\r\n        }\r\n    \treturn nodeData;\r\n    },\r\n\r\n    // _addEventListeners: function() {\r\n    // \tcc.director.on(cc.Director.EVENT_BEFORE_VISIT, this._doLayoutDirty, this);\r\n    //     this.node.on('size-changed', this._doLayoutDirty, this);\r\n    //     this.node.on('anchor-changed', this._doLayoutDirty, this);\r\n    //     this.node.on('child-added', this._doLayoutDirty, this);\r\n    //     this.node.on('child-removed', this._doLayoutDirty, this);\r\n    //     this.node.on('child-reorder', this._doLayoutDirty, this);\r\n    //     this._addChildrenEventListeners();\r\n    // },\r\n\r\n    // _addChildrenEventListeners: function() {\r\n    // \tvar children = this.node.children;\r\n    //     children.forEach(function (child) {\r\n    //         child.on('size-changed', this._doLayoutDirty, this);\r\n    //         child.on('position-changed', this._doLayoutDirty, this);\r\n    //         child.on('anchor-changed', this._doLayoutDirty, this);\r\n    //         child.on('active-in-hierarchy-changed', this._doLayoutDirty, this);\r\n    //     }.bind(this));\r\n    // },\r\n\r\n    // _doLayoutDirty: function() {\r\n    // \tthis._save();\r\n    // },\r\n\r\n\r\n\r\n\r\n    onLoad: function () {\r\n    \tthis.node.on('touchstart', ()=>null);\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    editor: {\r\n        menu: \"dyl/物理\",\r\n        executeInEditMode: true,\r\n    },\r\n    properties: {\r\n        collisionFun: {\r\n            default: function () {\r\n                return new cc.Component.EventHandler;\r\n            },\r\n            type: cc.Component.EventHandler,\r\n        },\r\n        // collisionFun: cc.Component.EventHandler,\r\n    },\r\n\r\n    __preload () {\r\n        // if (CC_EDITOR) {\r\n        //     cc.log(\"haha\");\r\n        //     this.node.on(\"name-changed\", ()=>{\r\n        //         cc.log(\"name-changed\");\r\n        //     })\r\n        // }\r\n\r\n\r\n\r\n        let rigidbody = this.node.getComponent(cc.RigidBody);\r\n        Object.defineProperty(this.node, \"v\", {\r\n            get: function () {\r\n                return rigidbody.linearVelocity;\r\n            },\r\n            set: function (velocity) {\r\n                rigidbody.linearVelocity = velocity;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this.node, \"f\", {\r\n            get: function () {\r\n                return rigidbody.linearDamping;\r\n            },\r\n            set: function (damping) {\r\n                rigidbody.linearDamping = damping;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this.node, \"a\", {\r\n            set: function (force) {\r\n                rigidbody.applyForceToCenter(force);\r\n            }\r\n        });\r\n\r\n        rigidbody.fixedRotation = true;\r\n        rigidbody.enabledContactListener = true;\r\n        if (this.collisionFun.handler !== \"\") {\r\n            this.collisionComponent = this.collisionFun.target.getComponent(this.collisionFun.component);\r\n        }\r\n    },\r\n\r\n\r\n    onEnable () {\r\n        if (CC_EDITOR) {\r\n            if (!this.collisionFun.target) {\r\n                this.collisionFun.target = this.node;\r\n            }\r\n        }\r\n    },\r\n    \r\n    onBeginContact: function (contact, selfCollider, otherCollider) {\r\n        if (!this.collisionComponent) {\r\n            return;\r\n        }\r\n        contact.disabled = this.collisionComponent[this.collisionFun.handler](otherCollider.node);\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    },\r\n\r\n    onLoad () {\r\n        this.node.type = \"en\";\r\n\r\n        let name = this.node.name;\r\n        dyl.data(\"enData.\" + name, this.node);\r\n        // let data = dyl.data.enData[name];\r\n        // this.node.hp = Number(data.hp);\r\n        // this.node.def = Number(data.def);\r\n        // this.node.atk = Number(data.atk);\r\n        // this.node.atkFun = data.atkFun;\r\n        // this.node.defFun = data.defFun;\r\n    },\r\n\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    },\r\n\r\n    onLoad () {\r\n        // dyl.atk = \"crossed-swords\";\r\n        // dyl.def = \"templar-shield\";\r\n        this.node.touch = \"stop\";\r\n\r\n        let lv = hjm.level;\r\n        // let randNum = Number(dyl.data.levelData.rand);\r\n        let randNum = dyl.data(\"levelData.\" + String(lv), this).rand;\r\n        // this.node.rand.set(randNum);\r\n        dyl.setRand(randNum);\r\n        // cc.log(\"rand\", dyl.rand(100));\r\n        let enNameArr = this.getEnNameArr(lv);\r\n        this.getEnArr(enNameArr);\r\n    },\r\n\r\n    getEnNameArr (lv) {\r\n        // let data = dyl.data.levelData[lv]; \r\n        let data = {};\r\n        dyl.data(\"levelData.\" + String(lv), data);\r\n        let enNameArr = [];\r\n        for (let i = 0; i < 5; i++) {\r\n            let name = data[\"en\" + String(i)];\r\n            if (name && (name !== \"\")) {\r\n                enNameArr.push(\"role/\" + name);\r\n            }\r\n        }\r\n        // cc.log(enNameArr);\r\n        return enNameArr;\r\n    },\r\n\r\n    getEnArr (enNameArr) {\r\n        let count = enNameArr.length;\r\n        let enArr = [];\r\n        let fun = ()=>{\r\n            count--;\r\n            if (!count) {\r\n                this.initMap(enArr);\r\n                this.node.getComponent(\"GameMain\").myStart();\r\n            }\r\n        }\r\n        for (var i = enNameArr.length - 1; i >= 0; i--) {\r\n            let name = enNameArr[i];\r\n            cc.loader.loadRes(name, (err, prefab)=>{\r\n                let node = cc.instantiate(prefab);\r\n                enArr.push(node);\r\n                // cc.log(name, err);\r\n                node.parent = hjm._en;\r\n                fun();\r\n            });\r\n        }\r\n    },\r\n\r\n    getNotArr (notNum) {\r\n        let notArr = [];\r\n        let nodeArr = hjm._not.getChildren();\r\n        for (let i = 0; i < notNum; i++) {\r\n            let node = nodeArr[i];\r\n            node.active = true;\r\n            notArr.push(node);\r\n        }\r\n        this.node.notArr = [];\r\n        for (let i = notNum; i < nodeArr.length; i++) {\r\n            this.node.notArr.push(nodeArr[i]);\r\n        }\r\n        return notArr;\r\n    },\r\n\r\n    initMap (enArr) {\r\n        let myArr = [...hjm._me.getChildren()];\r\n        let notNum = 8 - myArr.length - enArr.length;\r\n        let notArr = this.getNotArr(notNum);\r\n        let nodeArr = [0, ...myArr, ...notArr, ...enArr];\r\n        nodeArr.sort(()=>{\r\n            let tmp = dyl.rand() - 0.5;\r\n            // cc.log(\"tmp\", tmp);\r\n            return tmp;\r\n        });\r\n\r\n        let id = 0; \r\n        let posMap = dyl.addMapLayer(3, 3, 315);\r\n        //checkIn(p,isT) tposToPos(tp) getTpos(p) getPos(p, isT)\r\n        let map = dyl.addMap(3, 3, (p)=>{\r\n            let i = id++;\r\n            let node = nodeArr[i];\r\n            if (node) {\r\n                node.setPosition(posMap.get(p));\r\n                return nodeArr[i];\r\n            }\r\n            return null;\r\n        });\r\n        this.node.posMap = posMap;\r\n        this.node.map = map;\r\n    },\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    },\r\n\r\n    start () {\r\n    },\r\n\r\n    myStart () {\r\n        cc.log(\"myStart\");\r\n        this.touchData = null;\r\n        dyl.process(this, [\"prePk\", \"resetState\", \"myStartEnd\"], {});\r\n    },\r\n\r\n    myStartEnd (counter) {\r\n        this.node.touch = \"touch\";\r\n        counter();\r\n    },\r\n\r\n    saveTouch (tp) {\r\n        if (!this.touchData) {\r\n            this.touchData = \"ing\";\r\n            this.play(tp);\r\n        }\r\n        else if (this.touchData === \"ing\") {\r\n            this.touchData = tp;\r\n        }\r\n        else {\r\n            this.touchData = tp;\r\n        }\r\n    },\r\n\r\n    delTouch () {\r\n        if (!this.touchData) {\r\n        }\r\n        else if (this.touchData === \"ing\") {\r\n            this.touchData = null;\r\n        }\r\n        else {\r\n            // this.touchData = tp;\r\n            let tp = this.touchData;\r\n            this.touchData = \"ing\";\r\n            this.play(tp);\r\n        }\r\n    },\r\n\r\n    getAction () {\r\n        let id = 0;\r\n        let dataArr = [];        \r\n        let end = ()=>{\r\n            let i = id++;\r\n            if (i >= dataArr.length) {\r\n                return;\r\n            }\r\n            let {node, fun, arr} = dataArr[i];\r\n            fun.bind(node)(end, ...arr);\r\n        }\r\n\r\n        let add = (node, fun, ...arr)=>{\r\n            if (!node) {\r\n                return end();\r\n            }\r\n            if (!fun) {\r\n                return;\r\n            }\r\n            let data = {\r\n                node: node,\r\n                fun: fun,\r\n                arr: arr\r\n            }\r\n            dataArr.push(data);\r\n        }\r\n        return add;\r\n    },\r\n\r\n    touchOn (p) {\r\n        let tp = this.node.posMap.find(p);\r\n        if (tp) {\r\n            this.saveTouch(tp);\r\n        }\r\n    },\r\n\r\n    getRunTypeInit (counter) {\r\n        let {tp} = counter;\r\n    },\r\n\r\n    getRunTypeInit (counter) {\r\n        let {tp} = counter;\r\n        let map = this.node.map;\r\n        let dir = this.getDir(tp);\r\n        if (!dir) {\r\n            this.delTouch();\r\n            return null;\r\n        }\r\n        let moveNode = map.get(tp); \r\n        let moveType = moveNode.type;\r\n\r\n        moveNode.oriParent = moveNode.parent;\r\n        moveNode.parent = hjm._top;\r\n\r\n        counter.moveNode = moveNode;\r\n        counter.moveType = moveType;\r\n        counter.dir = dir;\r\n        // counter();\r\n        if (moveType === \"atk\" || moveType === \"def\") {\r\n            moveType = \"not\";\r\n        }\r\n        return moveType;\r\n        // add(this, this.run, tp, dir);\r\n        // add(this, this.prePk);\r\n    },\r\n\r\n    run (counter) {\r\n        let {tp, dir} = counter;\r\n        let ntp = dir.add(tp);\r\n        let move = cc.moveTo(0.2, this.node.posMap.get(ntp));\r\n        // move.add = -3;\r\n        let node = this.node.map.get(tp);\r\n        dyl.run(node, move, ()=>{\r\n            this.node.map.set(tp, null);\r\n            this.node.map.set(ntp, node);\r\n            tp.x = ntp.x;\r\n            tp.y = ntp.y;\r\n        }, counter);\r\n    },\r\n\r\n    getAtkDefEn (counter) {\r\n        let {tp} = counter;\r\n        let map = this.node.map;\r\n        let dirArr = dyl.addDirArr();\r\n        counter.enPosArr = [];\r\n        counter.atkFun = \"notAtk\";\r\n        counter.defFun = \"notDef\";\r\n        for (let i = 0; i < 4; i++) {\r\n            let dir = dirArr[i];\r\n            let ntp = dir.add(tp);\r\n            let type = map.get(ntp, \"type\");\r\n            if (type === \"atk\") {\r\n                counter.atkFun = ai.atkFun;\r\n                counter.atkNode = map.get(ntp);\r\n                counter.atkDir = dir.mul(-this.node.posMap.d);\r\n            }\r\n            else if (type === \"def\") {\r\n                counter.defFun = ai.defFun;\r\n                counter.defNode = map.get(ntp);\r\n                counter.defDir = dir.mul(-this.node.posMap.d);\r\n            }\r\n            else if (type === \"en\") {\r\n                counter.enPosArr.push(ntp);\r\n            }\r\n        }\r\n        counter();\r\n        return;\r\n    },\r\n\r\n    runTool (counter) { //moveNode.atk += this.atkNode.atk;\r\n        let {atkNode, atkDir, defNode, defDir, moveNode, enPosArr} = counter;\r\n        if (enPosArr.length === 0) {\r\n            return counter();\r\n        }\r\n        if (atkNode) {\r\n            counter(atkNode, \"add\", hjm._top, atkDir, ()=>{\r\n                moveNode.atk += atkNode.atk;\r\n            });\r\n        }\r\n        if (defNode) {\r\n            counter(defNode, \"add\", hjm._top, defDir, ()=>{\r\n                moveNode.def += defNode.def;\r\n            });\r\n        }\r\n        counter();\r\n    },\r\n\r\n    myAtk (counter) {\r\n        // add(this, hjm._skill.add, this.atkFun, tp, map, this.node.posMap);\r\n        let {atkFun, tp, moveNode, defFun} = counter;\r\n        moveNode.defFun = defFun;\r\n        counter(hjm._skill, \"add\", atkFun, tp, this.node.map, this.node.posMap);\r\n        counter();\r\n    },\r\n\r\n    checkDie (counter) {\r\n        let notLose = false;\r\n        let notWin = false;\r\n        let map = this.node.map;\r\n        map.run((tp)=>{\r\n            let node = map.get(tp);\r\n            if (node && node.hp <= 0) {\r\n                this.die(tp);\r\n                return;\r\n            }\r\n            if (node && node.type === \"me\") {\r\n                notLose = true;\r\n            }\r\n            if (node && node.type === \"en\") {\r\n                notWin = true;\r\n            }\r\n        })\r\n        if (!notLose) {\r\n            counter.endAns = \"lose\";\r\n            counter();\r\n            return;\r\n        }\r\n        if (!notWin) {\r\n            counter.endAns = \"win\";\r\n            counter();\r\n            return;\r\n        }\r\n        counter();\r\n        return;\r\n    },\r\n\r\n    enAtkBack (counter) {\r\n        let {enPosArr, tp} = counter;\r\n        for (let i = enPosArr.length - 1; i >= 0; i--) {\r\n            let ep = enPosArr[i];\r\n            let en = this.node.map.get(ep);\r\n            // add(this, hjm._skill.add, en.atkFun, ep, map, this.node.posMap);\r\n            // add(this, this.checkDie);\r\n            counter(hjm._skill, \"add\", en.atkFun, ep, this.node.map, this.node.posMap);\r\n        }\r\n        return counter();\r\n    },\r\n\r\n    endPlay (counter) {\r\n        let {tp, atkNode, defNode, endAns} = counter;\r\n        // cc.log(\"endPlay\");\r\n        let moveNode = this.node.map.get(tp);\r\n        moveNode.parent = moveNode.oriParent;\r\n        // moveNode.defFun = \"notDef\";\r\n        if (moveNode.type === \"me\") {\r\n            moveNode.defFun = \"notDef\";\r\n            moveNode.atkFun = \"notAtk\";\r\n        }\r\n        let map = this.node.map;\r\n        map.run((p)=>{\r\n            let node = map.get(p);\r\n            if (node && (node.type !== \"not\")) {\r\n                // node.hp = node.oriData.hp;\r\n                node.atk = node.oriData.atk;\r\n                node.def = node.oriData.def;\r\n            }\r\n        })\r\n        if (atkNode) {\r\n            atkNode.reset();\r\n        }\r\n        if (defNode) {\r\n            defNode.reset();\r\n        }\r\n        // this.checkDie();\r\n        this.delTouch();\r\n        if (endAns) {\r\n            this.node.touch = \"end\";\r\n            if (endAns === \"win\") {\r\n                hjm.level = hjm.level + 1;\r\n            }\r\n            hjm._end.add(endAns, 0.3);\r\n        }\r\n        counter();\r\n    },\r\n\r\n    enAtk (counter) {\r\n        let {tp, moveNode} = counter;\r\n        counter(hjm._skill, \"add\", moveNode.atkFun, tp, this.node.map, this.node.posMap);\r\n        counter();\r\n        // add(this, hjm._skill.add, moveNode.atkFun, tp, map, this.node.posMap);\r\n    },\r\n\r\n    play (tp) {\r\n\r\n        let arr = [{\r\n            getRunTypeInit: {\r\n                me: [\"run\", \"resetState\", \"getAtkDefEn\", \"runTool\", \"myAtk\", \"checkDie\", \"resetState\", \"enAtkBack\", \"checkDie\", \"endPlay\", \"resetState\"],\r\n                en: [\"run\", \"resetState\", \"enAtk\", \"checkDie\", \"endPlay\", \"resetState\"],\r\n                not: [\"run\", \"resetState\", \"endPlay\", \"resetState\"]\r\n            }}];\r\n        dyl.process(this, arr, {\r\n            tp: tp\r\n        });\r\n\r\n\r\n\r\n        // let map = this.node.map;\r\n        // let dir = this.getDir(tp);      \r\n        // if (!dir) { //操作无效\r\n        //     this.delTouch();\r\n        //     return;\r\n        // }  \r\n        // let moveNode = map.get(tp);\r\n        // this.moveType = moveNode.type;\r\n        // moveNode.oriParent = moveNode.parent;\r\n        // moveNode.parent = hjm._top;\r\n        // let add = this.getAction();\r\n        // add(this, this.run, tp, dir);\r\n        // add(this, this.prePk);\r\n        // if (this.moveType === \"me\") {\r\n            // let enPosArr = this.getAtkDefEn(tp.add(dir));\r\n            // moveNode.defFun = this.defFun;\r\n            // if (this.atkNode && enPosArr.length > 0) {\r\n            //     add(this.atkNode, this.atkNode.add, hjm._top, this.atkDir);\r\n            //     add(this, (end)=>{\r\n            //         // cc.log(typeof this.atkNode.atk, typeof moveNode.atk);\r\n            //         moveNode.atk += this.atkNode.atk;\r\n            //         end();\r\n            //     });\r\n            // }\r\n            // if (this.defNode && enPosArr.length > 0) {\r\n            //     add(this.defNode, this.defNode.add, hjm._top, this.defDir);\r\n            //     add(this, (end)=>{\r\n            //         moveNode.def += this.defNode.def;\r\n            //         end();\r\n            //     });\r\n            // }\r\n            // add(this, hjm._skill.add, this.atkFun, tp, map, this.node.posMap);\r\n            // add(this, this.checkDie);\r\n            // for (let i = enPosArr.length - 1; i >= 0; i--) {\r\n            //     let ep = enPosArr[i];\r\n            //     let en = map.get(ep);\r\n            //     add(this, hjm._skill.add, en.atkFun, ep, map, this.node.posMap);\r\n            //     add(this, this.checkDie);\r\n            // }\r\n            // if (this.isAtk) {\r\n            //     add(this, this.node._skill.add, dyl.atkFun, tp, map, this.node.posMap);\r\n            // }\r\n            // else {\r\n            //     add(this, this.node._skill.add, \"notAtk\", tp, map, this.node.posMap);\r\n            // }\r\n        // }\r\n        // else if (this.moveType === \"en\") {\r\n        //     add(this, hjm._skill.add, moveNode.atkFun, tp, map, this.node.posMap);\r\n        //     add(this, this.checkDie);\r\n        // }\r\n\r\n        // add(this, this.endPlay, tp);\r\n        // add(); \r\n    },\r\n\r\n    // checkDie (end) {\r\n    //     let notLose = false;\r\n    //     let notWin = false;\r\n    //     let map = this.node.map;\r\n    //     map.run((tp)=>{\r\n    //         let node = map.get(tp);\r\n    //         if (node && node.hp <= 0) {\r\n    //             this.die(tp);\r\n    //             return;\r\n    //         }\r\n    //         if (node && node.type === \"me\") {\r\n    //             notLose = true;\r\n    //         }\r\n    //         if (node && node.type === \"en\") {\r\n    //             notWin = true;\r\n    //         }\r\n    //     })\r\n    //     if (!notLose) {\r\n    //         this.endAns = \"lose\";\r\n    //         end();\r\n    //         return;\r\n    //     }\r\n    //     if (!notWin) {\r\n    //         this.endAns = \"win\";\r\n    //         end();\r\n    //         return;\r\n    //     }\r\n    //     end();\r\n    //     return;\r\n    // },\r\n\r\n    die (tp) {\r\n        let notArr = this.node.notArr;\r\n        let not = notArr[notArr.length - 1];\r\n        notArr.length--;\r\n        not.active = true;\r\n\r\n        let node = this.node.map.get(tp);\r\n        node.active = false;\r\n        not.setPosition(this.node.posMap.get(tp));\r\n        this.node.map.set(tp, not);\r\n    },\r\n\r\n    // getAtkDefEn (tp) {\r\n    //     let map = this.node.map;\r\n    //     let dirArr = dyl.addDirArr();\r\n    //     let enPosArr = [];\r\n    //     this.atkFun = \"notAtk\";\r\n    //     this.defFun = \"notDef\";\r\n    //     this.atkNode = null;\r\n    //     this.defNode = null;\r\n    //     for (let i = 0; i < 4; i++) {\r\n    //         let dir = dirArr[i];\r\n    //         let ntp = dir.add(tp);\r\n    //         let type = map.get(ntp, \"type\");\r\n    //         if (type === \"atk\") {\r\n    //             this.atkFun = ai.atkFun;\r\n    //             this.atkNode = map.get(ntp);\r\n    //             this.atkDir = dir.mul(-this.node.posMap.d);\r\n    //         }\r\n    //         else if (type === \"def\") {\r\n    //             this.defFun = ai.defFun;\r\n    //             this.defNode = map.get(ntp);\r\n    //             this.defDir = dir.mul(-this.node.posMap.d);\r\n    //         }\r\n    //         else if (type === \"en\") {\r\n    //             enPosArr.push(ntp);\r\n    //         }\r\n    //     }\r\n    //     return enPosArr;\r\n    // },\r\n\r\n    prePk (counter) {\r\n        let map = this.node.map;\r\n        map.run((p)=>{\r\n            let node = map.get(p);\r\n            if (node && (node.type !== \"not\")) {\r\n                node.oriData = {\r\n                    // hp: node.hp,\r\n                    atk: node.atk,\r\n                    def: node.def\r\n                }\r\n            }\r\n        })\r\n        // map.run((p)=>{\r\n        //     let node = map.get(p);\r\n        //     if (node && (node.type === \"me\" || node.type === \"en\")) {\r\n        //         // hjm._skill.add(counter, node.prePk, p, map, this.node.posMap);\r\n        //         // cc.log(\"node\", node.name, node.type, node);\r\n        //         counter(hjm._skill, \"add\", node.prePk, p, this.node.map, this.node.posMap);\r\n        //     }\r\n        // })\r\n        // this.isAtk = \"notAtk\";\r\n        // this.isDef = \"notDef\";\r\n        counter();\r\n    },\r\n\r\n    resetState (counter) {\r\n        let map = this.node.map;\r\n        map.run((p)=>{\r\n            let node = map.get(p);\r\n            if (node && (node.type === \"me\" || node.type === \"en\")) {\r\n                // hjm._skill.add(counter, node.prePk, p, map, this.node.posMap);\r\n                // cc.log(\"node\", node.name, node.type, node);\r\n                counter(hjm._skill, \"add\", node.stateFun, p, this.node.map, this.node.posMap);\r\n            }\r\n        })\r\n        // this.isAtk = \"notAtk\";\r\n        // this.isDef = \"notDef\";\r\n        counter();\r\n    },\r\n\r\n\r\n    // saveTouch (tp) {\r\n    //     if (!this.touchTp) {\r\n    //         this.play(tp);\r\n    //     }\r\n    // }, \r\n\r\n    // endPlay (end, tp) {\r\n    //     cc.log(\"endPlay\");\r\n    //     let moveNode = this.node.map.get(tp);\r\n    //     moveNode.parent = moveNode.oriParent;\r\n    //     let map = this.node.map;\r\n    //     map.run((p)=>{\r\n    //         let node = map.get(p);\r\n    //         if (node && (node.type !== \"not\")) {\r\n    //             // node.hp = node.oriData.hp;\r\n    //             node.atk = node.oriData.atk;\r\n    //             node.def = node.oriData.def;\r\n    //         }\r\n    //     })\r\n    //     if (this.atkNode) {\r\n    //         this.atkNode.reset();\r\n    //     }\r\n    //     if (this.defNode) {\r\n    //         this.defNode.reset();\r\n    //     }\r\n    //     // this.checkDie();\r\n    //     this.delTouch();\r\n    //     if (this.endAns) {\r\n    //         this.node.touch = \"end\";\r\n    //         hjm._end.add(this.endAns, 0.3);\r\n    //     }\r\n    //     end();\r\n    // },\r\n\r\n    // run (end, tp, dir) {\r\n    //     let ntp = dir.add(tp);\r\n    //     let move = cc.moveTo(0.2, this.node.posMap.get(ntp));\r\n    //     // move.add = -3;\r\n    //     let node = this.node.map.get(tp);\r\n    //     dyl.run(node, move, ()=>{\r\n    //         this.node.map.set(tp, null);\r\n    //         this.node.map.set(ntp, node);\r\n    //         tp.x = ntp.x;\r\n    //         tp.y = ntp.y;\r\n    //     }, end);\r\n    // },\r\n\r\n    getDir (tp) {\r\n        let map = this.node.map;\r\n        if (!map.get(tp)) {\r\n            return null;\r\n        }\r\n        let dirArr = dyl.addDirArr();\r\n        for (let i = 0; i < 4; i++) {\r\n            let dir = dirArr[i];\r\n            let ntp = dir.add(tp);\r\n            if (map.get(ntp) === null) {\r\n                return dir;\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        buttonLayer: cc.Node,\r\n    },\r\n\r\n    onLoad: function () {\r\n        this.say = hjm._say.getComponent(cc.Label);\r\n\r\n        this.read(hjm.level);\r\n        // setTimeout(()=>{\r\n        //     this.node._say.y = -700;\r\n        // }, 10000);\r\n    },\r\n\r\n    touchOn: function (p) {\r\n        let arr = this.buttonLayer.getChildren();\r\n        p.subSelf(this.buttonLayer);\r\n        let button = p.in(...arr);\r\n        if (button) {\r\n            this[button.name + \"On\"](p);\r\n        }\r\n    },\r\n\r\n    shopOn: function (p) {\r\n        cc.log(\"shopOn\");\r\n        hjm._shop.add(null, 0.3);\r\n    },\r\n\r\n    stateOn: function (p) {\r\n        cc.log(\"stateOn\");\r\n        hjm._state.add(null, 0.3);\r\n    },\r\n\r\n    playOn: function (p) {\r\n        cc.director.loadScene(\"play\");\r\n    },\r\n\r\n    read: function (id) {\r\n        // let name = String(id);\r\n        // let data = dyl.data.card[id];\r\n        let data = {};\r\n        dyl.data(\"card.\" + String(id), data);\r\n        if (data.type === \"shop\") {\r\n            this.readShop(data);\r\n        }\r\n        else {\r\n            this.readEn(data);\r\n        }\r\n    },\r\n\r\n    readShop: function (data) {\r\n        hjm._enCard.active = false;\r\n        hjm._shopCard.active = true;\r\n        hjm._playOpen.active = true;\r\n        hjm._playFight.active = false;\r\n\r\n        this.say.string = data.chName + \": \\n        \" + data.say;\r\n    },\r\n\r\n    readEn: function (data) {\r\n        hjm._enCard.active = true;\r\n        hjm._shopCard.active = false;\r\n        hjm._playOpen.active = false;\r\n        hjm._playFight.active = true;\r\n        // this.node._enCard.add(\"en/\" + data.name);\r\n        this.setSpr(hjm._enCard, \"en/\" + data.enName);\r\n        this.say.string = data.chName + \": \\n        \" + data.say;\r\n    },\r\n\r\n    setSpr: function (node, path) {\r\n        cc.loader.loadRes(path, cc.SpriteFrame, (err, sprr)=>{\r\n            let sprite = node.getComponent(cc.Sprite);\r\n            sprite.spriteFrame = sprr;\r\n        });\r\n    }\r\n});\r\n","\"use strict\";\r\n\r\nwindow.initHjmDataFun = function () {\r\n\tcc.log(\"initHjmDataFun\");\r\n\t_hjm(\"level\", 0);\r\n\t_hjm(\"coin\", 50);\r\n\t_hjm(\"atk\", \"slingshot\");\r\n\t_hjm(\"atkArr\", [\"slingshot\"]);\r\n\t_hjm(\"atkShopArr\", [\"slingshot\", \"wizard-staff\", \"crossed-swords\", \"trefoil-shuriken\", \"thor-hammer\"]);\r\n\t_hjm(\"def\", \"templar-shield\");\r\n\t_hjm(\"defArr\", [\"templar-shield\"]);\r\n\t_hjm(\"defShopArr\", [\"templar-shield\", \"black-hand-shield\"]);\r\n\r\n\t_hjm(\"heroData\", {\r\n\t\thp: 4,\r\n\t\tatk: 2,\r\n\t\tdef: 1\r\n\t});\r\n};\r\n\r\nif (window.isCryptoJS && window.initHjmFun && window.initDylFun) {\r\n\tcc.log(\"init hjmData\");\r\n\twindow.initDylFun(window.isCryptoJS);\r\n\twindow.initHjmFun();\r\n\twindow.initHjmDataFun();\r\n}","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    },\r\n\r\n    onLoad () {\r\n        this.node.type = \"me\";\r\n        this.node.stateFun = \"notState\";\r\n\r\n        let data = hjm.heroData;\r\n        for (let i in data) {\r\n        \tthis.node[i] = data[i];\r\n        }\r\n    },\r\n\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    },\r\n\r\n    onLoad () {\r\n        this.node.type = \"not\";\r\n    },\r\n\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        w: 5,\r\n        h: 3,\r\n        // wl: 300,\r\n        // hl: 200,\r\n        toolLayer: cc.Node,\r\n\r\n        buttonLayer: cc.Node,\r\n        defBg: cc.Node,\r\n        chooseSpr: cc.Node,\r\n        dataNode: cc.Node,\r\n        equipNode: cc.Node,\r\n        buyNode: cc.Node,\r\n        pool: cc.Node,\r\n    },\r\n\r\n    onLoad () {\r\n        cc.shop = this;\r\n        this.posArr = this.initPosArr();\r\n        let tab = {};\r\n        let atkArr = hjm.atkArr;\r\n        let defArr = hjm.defArr;\r\n        for (let i = atkArr.length - 1; i >= 0; i--) {\r\n            tab[atkArr[i]] = true;\r\n        }\r\n        for (let i = defArr.length - 1; i >= 0; i--) {\r\n            tab[defArr[i]] = true;\r\n        }\r\n        this.toolTab = tab;\r\n        // this.maxShowNum = this.w * this.h;\r\n        // this.pageNum = 0;\r\n        this.setType(\"atk\");\r\n    },\r\n\r\n\r\n    touchOn (p) {\r\n        let touchNode = p.in(...this.buttonLayer.getChildren());\r\n        if (touchNode) {\r\n            this[touchNode.name + \"On\"](p);\r\n        }\r\n    },\r\n\r\n    chooseTool (node) {\r\n        cc.log(\"chooseTool\");\r\n        if (!node) { //没有选中物品的状态\r\n            this.chooseSpr.x = -2000;\r\n            this.chooseNode = null;\r\n            this.setData(\"default\");\r\n            this.buyNode.lab = \"购买\";\r\n        }\r\n        else {\r\n            this.chooseSpr.setPosition(node);\r\n            this.chooseNode = node;\r\n            this.setData(node.name);\r\n            if (this.toolTab[node.name]) {\r\n                this.buyNode.lab = \"装备\";\r\n            }\r\n            else {\r\n                this.buyNode.lab = \"购买\";   \r\n            }\r\n        }\r\n    },\r\n\r\n    setData (name) {\r\n        cc.log(\"setData\");\r\n        dyl.data(this.type + \".\" + name, this.dataNode);\r\n        this.dataNode.hp = this.dataNode[this.type];\r\n        hjm[name] = this.dataNode.tool;\r\n    },\r\n\r\n    atkOn () {\r\n        cc.log(\"atkOn\");\r\n        this.setType(\"atk\");\r\n    },\r\n\r\n    defOn () {\r\n        cc.log(\"defOn\");\r\n        this.setType(\"def\");\r\n    },\r\n\r\n    nextOn () {\r\n        cc.log(\"nextOn\");\r\n        this.setPage(this.pageNum + 1);\r\n    },\r\n\r\n    buyOn () {\r\n        cc.log(\"buyOn\");\r\n        if (this.chooseNode) {\r\n            if (this.toolTab[this.chooseNode.name]) {\r\n                cc.log(\"装备\");\r\n                this.equip(this.chooseNode.name, this.chooseNode);\r\n                return;\r\n            }\r\n            // if (this.chooseNode.has.active) {\r\n            //     return;\r\n            // }\r\n            else if (this.chooseNode.coin > hjm.coin) {\r\n                return;\r\n            }\r\n            else {\r\n                cc.log(\"购买\");\r\n                // this.chooseNode.has.active = true;\r\n                this.chooseNode.getChildByName(\"coin\").color = cc.color(0, 255, 0);\r\n                let name = this.chooseNode.name;\r\n                this.toolTab[name] = true;\r\n                hjm[this.type + \"Arr\"].push(name);\r\n                hjm.coin -= this.chooseNode.coin;\r\n                this.chooseNode.coin = \"已拥有\";\r\n                this.buyNode.lab = \"装备\";\r\n\r\n                for (let i = this.arr.length - 1; i >= 0; i--) {\r\n                    let node = this.arr[i];\r\n                    if (this.toolTab[node.name]) {\r\n                        continue;\r\n                    }\r\n                    if (node.coin > hjm.coin) {\r\n                        node.getChildByName(\"coin\").color = cc.color(255, 0, 0);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    chooseOn (p) {\r\n        cc.log(\"chooseOn\");\r\n        let tool = p.in(...this.toolArr);\r\n        if (tool && tool.active) {\r\n            this.chooseTool(tool);\r\n        }\r\n    },\r\n\r\n    backOn (p) {\r\n        this.node.add(null, -0.3);\r\n    },\r\n\r\n    equip (name, node) {\r\n        hjm[this.type] = name;\r\n        this.equipNode.active = true;\r\n        this.equipNode.setPosition(node);\r\n    },\r\n\r\n    setType (type) {\r\n        cc.log(\"setType\");\r\n        this.type = type;\r\n        this.defBg.active = (type === \"def\");\r\n        this.setArr(hjm[type + \"ShopArr\"]);\r\n        this.chooseTool();\r\n    },\r\n\r\n    setArr (arr) {\r\n        cc.log(\"setArr\");\r\n        this.arr = arr;\r\n        this.setPage(0);\r\n    },\r\n\r\n    initTool (node, name) {\r\n        cc.log(\"initTool\");\r\n        dyl.data(this.type + \".\" + name, node);\r\n        hjm[name] = node.tool;\r\n        node.name = name;\r\n        if (this.toolTab[name]) {\r\n            // node.has.active = true;\r\n            node.coin = \"已拥有\";\r\n            node.getChildByName(\"coin\").color = cc.color(0, 255, 0);\r\n            // node.notMoney.active = false;\r\n        }\r\n        else if (node.coin > hjm.coin) {\r\n            // node.has.active = false;\r\n            // node.notMoney.active = true;\r\n            node.getChildByName(\"coin\").color = cc.color(255, 0, 0);\r\n        }\r\n        else {\r\n            node.getChildByName(\"coin\").color = cc.color(168, 80, 0);\r\n            // node.has.active = false;\r\n            // node.notMoney.active = false;\r\n        }\r\n        if (name === hjm[this.type]) {\r\n            this.equipNode.active = true;\r\n            this.equipNode.setPosition(node);\r\n        }\r\n    },\r\n\r\n    setPage (num) {\r\n        cc.log(\"setPage\");\r\n        if (num < 0) {\r\n            return false;\r\n        }\r\n        let maxShowNum = this.w * this.h;  \r\n        let id = maxShowNum * num;\r\n        if (id >= this.arr.length) {\r\n            return false;\r\n        }\r\n        this.equipNode.active = false;\r\n        this.pageNum = num;\r\n        if (id + maxShowNum > this.arr.length) {\r\n            for (let i = id; i < this.arr.length; i++) {\r\n                let node = this.toolArr[i];\r\n                node.active = true;\r\n                this.initTool(node, this.arr[i]);                \r\n            }\r\n\r\n            for (let i = this.arr.length; i < id + maxShowNum; i++) {\r\n                this.toolArr[i].active = false;\r\n            }\r\n        }\r\n        else {\r\n            for (let i = id; i < id + maxShowNum; i++) {\r\n                let node = this.toolArr[i];\r\n                node.active = true;\r\n                this.initTool(node, this.toolArr[i]);\r\n            }\r\n        }\r\n        this.chooseTool();\r\n    },\r\n\r\n    initPosArr () {\r\n        cc.log(\"initPosArr\");\r\n        let {w, h} = this;\r\n        let size = dyl.getSize(this.toolLayer);\r\n        let wl = size.x / w;\r\n        let hl = size.y / h;\r\n        let oriX = -wl * (w - 1) * 0.5;\r\n        let oriY = hl * (h - 1) * 0.5 + this.toolLayer.y;\r\n        let posArr = [];\r\n        let toolArr = [];\r\n        dyl.addMap(w, h, (p)=>{\r\n            let {x, y} = p;\r\n            let n = y * w + x;\r\n            posArr[n] = cc.p(oriX + x * wl, oriY - y * hl);\r\n            let node = this.pool.add();\r\n            node.setPosition(posArr[n]);\r\n            node.active = false;\r\n            toolArr.push(node);\r\n        });\r\n        this.toolArr = toolArr;\r\n        this.posArr = posArr;\r\n    },\r\n\r\n    resetUi () {\r\n\r\n    },\r\n\r\n\r\n\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    },\r\n\r\n    onLoad () {\r\n        let self = this;\r\n        // this.node.add = (end, skillName, ...arr)=>{\r\n        this.node.add = (end, skillName, tp, map, posMap)=>{\r\n            cc.log(\"skillName\", skillName);\r\n            // cc.log(\"type\", tp, map.get(tp), map.get(tp, \"type\"));\r\n            if (map.get(tp, \"type\") === \"not\") {\r\n                // cc.log(\"这个对象不存在了\");\r\n                end();\r\n                return;\r\n            }\r\n            if (typeof self[skillName] !== \"function\") {\r\n                cc.warn(\"没有这个技能\", skillName);\r\n                end();\r\n            }\r\n            this.tp = tp;\r\n            this.map = map;\r\n            this.posMap = posMap;\r\n            self[skillName](end, tp, map, posMap);\r\n        }\r\n    },\r\n\r\n    fun_getQueue () {\r\n        let arr = [];\r\n        let id = 0;\r\n        let queue = {};\r\n        queue.push = function (value) {\r\n            arr.push(value);\r\n        }\r\n        queue.pop = function () {\r\n            if (id >= arr.length) {\r\n                return null;\r\n            }\r\n            return arr[id++];\r\n        }\r\n        return queue;\r\n    },\r\n\r\n    fun_getDirArr () {\r\n        let {tp, map} = this;\r\n        let atkNode = map.get(tp);\r\n        let enType = (atkNode.type === \"me\") ? \"en\" : \"me\";\r\n        let dirArr = dyl.addDirArr();\r\n        let arr = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            let np = dirArr[i].add(tp);\r\n            if (map.get(np, \"type\") === enType) {\r\n                arr.push(dirArr[i]);\r\n            }\r\n        }\r\n        return arr;\r\n    },\r\n\r\n    act_notFront (np, dir, f = 1) {\r\n        let {tp, map} = this;\r\n        let nowNode = map.get(tp);\r\n        // let dir = np.sub(tp);\r\n        let back = cc.moveBy(0.3, dir.mul(-100 * f));\r\n        back.node = nowNode;\r\n        back.add = 0.6;\r\n\r\n        let go = cc.moveBy(0.05, dir.mul(120 * f));\r\n        go.node = nowNode;\r\n        go.add = 1.5;\r\n        return [back, go];\r\n    },\r\n\r\n    act_notBack (np, dir, f = 1) {\r\n        let {tp, map, posMap} = this;\r\n        let nowNode = map.get(tp);\r\n        let nextNode = map.get(np);\r\n        // let dir = np.sub(tp);\r\n        let back1 = cc.moveBy(0.1, dir.mul(-20 * f));\r\n        back1.node = nowNode;\r\n        let back2 = cc.moveBy(0.1, dir.mul(30 * f));\r\n        back2.node = nextNode;\r\n        back2.add = 0.6;\r\n        let reset1 = cc.moveTo(0.05, posMap.get(tp));\r\n        reset1.node = nowNode;\r\n        let reset2 = cc.moveTo(0.05, posMap.get(np));\r\n        reset2.node = nextNode;\r\n        return [[back1, back2], [reset1, reset2], 0.3];\r\n    },\r\n\r\n    act_arrBack (arr, dir, f = 1) {\r\n        let arr0 = [];\r\n        let arr1 = [];\r\n        for (let i = arr.length - 1; i >= 0; i--) {\r\n            let notBackArr = this.act_notBack(arr[i], dir, f);\r\n            arr0.push(...notBackArr[0]);\r\n            arr1.push(...notBackArr[1]);\r\n        }\r\n        return [arr0, arr1, 0.3];\r\n    },\r\n\r\n    act_rotateArrBack (dirArr) {\r\n        let {tp, map, posMap} = this;\r\n\r\n        let backArr1 = [];\r\n        let backArr2 = [];\r\n        for (let i = dirArr.length - 1; i >= 0; i--) {\r\n            let dir = dirArr[i];\r\n            let np = dir.add(tp);\r\n            let move1 = cc.moveBy(0.1, dir.mul(30));\r\n            move1.node = map.get(np);\r\n            backArr1.push(move1);\r\n\r\n            let move2 = cc.moveTo(0.05, posMap.get(np));\r\n            move2.node = map.get(np);\r\n            backArr2.push(move2);\r\n        }\r\n        return [0.2, backArr1, backArr2];\r\n    },\r\n\r\n    act_rotate (np) {\r\n        let {map} = this;\r\n        let node = map.get(np);\r\n        node.setScale(1.2);\r\n        let rotate = cc.rotateTo(0.35, 720);\r\n        rotate.node = map.get(np);\r\n        return [rotate, ()=>node.setScale(1)];\r\n    },\r\n\r\n    fun_rotate (dirArr) {\r\n        let {tp, map} = this;\r\n        for (let i = dirArr.length - 1; i >= 0; i--) {\r\n            this.fun_atk(dirArr[i].add(tp));\r\n        }\r\n    },\r\n\r\n    fun_atk (np, r = 1) {\r\n        // cc.log(\"notAtk\", atkNode.atk, defNode.def);\r\n        let {tp, map} = this;\r\n        let atkNode = this.map.get(tp);\r\n        let defNode = this.map.get(np);\r\n        let hurtNum = 0;\r\n        if (atkNode.atk * r > defNode.def) {\r\n            hurtNum = atkNode.atk * r - defNode.def;\r\n        }\r\n        // hurtNum *= r;\r\n        hurtNum = Math.floor(hurtNum);\r\n        let defFunName = defNode.defFun;\r\n        // cc.log(\"defFunName--------\", defFunName, \"ddd\");\r\n        if (this[defFunName]) {\r\n            this[defFunName](hurtNum, atkNode, defNode);\r\n        }\r\n        else {\r\n            this.notDef(hurtNum, atkNode, defNode);\r\n        }\r\n    },\r\n\r\n    fun_arrAtk (arr, r = 1) {\r\n        for (let i = arr.length - 1; i >= 0; i--) {\r\n            this.fun_atk(arr[i], r);\r\n        }\r\n    },\r\n\r\n    fun_getLinkArr (np) {\r\n        let {map} = this;\r\n        let type = map.get(np, \"type\");\r\n        let visit = dyl.addMap(map.w, map.h, ()=>false);\r\n        let queue = this.fun_getQueue();\r\n        queue.push(np);\r\n        let ans = [np];\r\n        visit.set(np, true);\r\n        while(true) {\r\n            let now = queue.pop();\r\n            if (!now) {\r\n                break;\r\n            }\r\n            let dirArr = dyl.addDirArr();\r\n            for (let i = 0; i < 4; i++) {\r\n                let p = now.add(dirArr[i]);\r\n                if (map.get(p, \"type\") === type && !visit.get(p)) {\r\n                    visit.set(p, true);\r\n                    ans.push(p);\r\n                    queue.push(p);\r\n                }\r\n            }\r\n        }\r\n        return ans;\r\n    },\r\n\r\n    notBackDef (hurtNum, atkNode, defNode) {\r\n        cc.log(\"notBackDef\");\r\n        hurtNum = Math.floor(hurtNum);\r\n        defNode.hp -= hurtNum;\r\n        atkNode.hp -= 1;\r\n        hjm._hpLayer.add(defNode, -hurtNum);\r\n        hjm._hpLayer.add(atkNode, -1);\r\n    },\r\n\r\n    notDef (hurtNum, atkNode, defNode) {\r\n        cc.log(\"notDef\");\r\n        hurtNum = Math.floor(hurtNum);\r\n        defNode.hp -= hurtNum;\r\n        hjm._hpLayer.add(defNode, -hurtNum);\r\n    },\r\n\r\n    notAtk (end) {\r\n        let dir = this.fun_getDirArr()[0];\r\n        if (!dir) {\r\n            return end();\r\n        }\r\n        let np = dir.add(this.tp);\r\n        let atkFun = ()=>this.fun_atk(np);\r\n        let arr = [...this.act_notFront(np, dir), atkFun, ...this.act_notBack(np, dir)];\r\n        dyl.run(this.node, ...arr, end);\r\n    },\r\n\r\n    notState (end) {\r\n        return end();\r\n    },\r\n\r\n    friendState (end) {\r\n        let {tp, map} = this;\r\n        let node = map.get(tp);\r\n        let type = node.type;\r\n        let dirArr = dyl.addDirArr();\r\n        // node.atk--;\r\n        let atk = node.oriData.atk;\r\n        for (let i = 0; i < 4; i++) {\r\n            let np = dirArr[i].add(tp);\r\n            if (map.get(np, \"type\") === type) {\r\n                atk += 1;\r\n            }\r\n        }\r\n        node.atk = atk;\r\n        end();\r\n    },\r\n\r\n    bigAtk (end) {\r\n        let {tp, map} = this;\r\n        if (dyl.rand() > 0.5) {\r\n            return this.notAtk(end);\r\n        }\r\n        // cc.log(\"bigAtk\", tp);\r\n        let dir = this.fun_getDirArr()[0];\r\n        if (!dir) {\r\n            return end();\r\n        }\r\n        let np = dir.add(this.tp);\r\n        // cc.log(\"big\");\r\n        let scale1 = cc.scaleTo(0.1, 1.2);\r\n        scale1.node = map.get(tp);\r\n        let scale2 = cc.scaleTo(0.1, 1);\r\n        scale2.node = map.get(tp);\r\n        // let arr = [scale1, ...this.notAction1(tp, np, map, 1.5), ...this.notAction2(tp, np, map, posMap, 1.5), scale2];\r\n\r\n        let atkFun = ()=>this.fun_atk(np, 2);\r\n        let arr = [scale1, ...this.act_notFront(np, dir, 1.5), atkFun, ...this.act_notBack(np, dir, 1.5), scale2];\r\n\r\n        dyl.run(this.node, ...arr, end);\r\n    },\r\n\r\n    twoAtk (end) {\r\n        let tmpEnd = ()=>{\r\n            this.notAtk(end);\r\n        }  \r\n        this.notAtk(tmpEnd);\r\n    },\r\n\r\n    electricAtk (end) {\r\n        // cc.log(\"electricAtk\");\r\n        let dir = this.fun_getDirArr()[0];\r\n        if (!dir) {\r\n            return end();\r\n        }\r\n\r\n        let arr = this.fun_getLinkArr(this.tp.add(dir));\r\n\r\n\r\n        let atkFun = ()=>this.fun_arrAtk(arr);\r\n        let seqArr = [...this.act_notFront(dir.mul(this.tp), dir), atkFun, ...this.act_arrBack(arr, dir)];\r\n        dyl.run(this.node, ...seqArr, end);\r\n    },\r\n\r\n    rotateAtk (end) {\r\n        let dirArr = this.fun_getDirArr();\r\n        if (dirArr.length < 1) {\r\n            return end();\r\n        }\r\n\r\n        let callId = 0;\r\n        let callBack = ()=>{\r\n            callId++;\r\n            if (callId === 3) {\r\n                end();\r\n            }\r\n        }\r\n\r\n        let rotateArr = this.act_rotateArrBack(dirArr);\r\n        let rotate = this.act_rotate(this.tp);\r\n        let fun = ()=>this.fun_rotate(dirArr);\r\n        dyl.run(...rotateArr, callBack);\r\n        dyl.run(...rotate, callBack);\r\n        dyl.run(0.25, fun, callBack);\r\n\r\n        // let np = dir.add(this.tp);\r\n        // let atkFun = ()=>this.fun_atk(np);\r\n        // let arr = [...this.act_notFront(np, dir), atkFun, ...this.act_notBack(np, dir)];\r\n        // dyl.run(this.node, ...arr, end);\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    },\r\n\r\n    onLoad () {\r\n        cc.loader.loadRes(\"atk/wizard\", cc.SpriteFrame,  (err, spr)=>{\r\n        \tlet sprite = this.node.getComponent(cc.Sprite);\r\n            cc.log(sprite, spr, err);\r\n        \tsprite.spriteFrame = spr;\r\n        });\r\n    },\r\n\r\n});\r\n","/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\nvar CryptoJS=CryptoJS||function(u,p){var d={},l=d.lib={},s=function(){},t=l.Base={extend:function(a){s.prototype=this;var c=new s;a&&c.mixIn(a);c.hasOwnProperty(\"init\")||(c.init=function(){c.$super.init.apply(this,arguments)});c.init.prototype=c;c.$super=this;return c},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&&(this[c]=a[c]);a.hasOwnProperty(\"toString\")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},\nr=l.WordArray=t.extend({init:function(a,c){a=this.words=a||[];this.sigBytes=c!=p?c:4*a.length},toString:function(a){return(a||v).stringify(this)},concat:function(a){var c=this.words,e=a.words,j=this.sigBytes;a=a.sigBytes;this.clamp();if(j%4)for(var k=0;k<a;k++)c[j+k>>>2]|=(e[k>>>2]>>>24-8*(k%4)&255)<<24-8*((j+k)%4);else if(65535<e.length)for(k=0;k<a;k+=4)c[j+k>>>2]=e[k>>>2];else c.push.apply(c,e);this.sigBytes+=a;return this},clamp:function(){var a=this.words,c=this.sigBytes;a[c>>>2]&=4294967295<<\n32-8*(c%4);a.length=u.ceil(c/4)},clone:function(){var a=t.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var c=[],e=0;e<a;e+=4)c.push(4294967296*u.random()|0);return new r.init(c,a)}}),w=d.enc={},v=w.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var e=[],j=0;j<a;j++){var k=c[j>>>2]>>>24-8*(j%4)&255;e.push((k>>>4).toString(16));e.push((k&15).toString(16))}return e.join(\"\")},parse:function(a){for(var c=a.length,e=[],j=0;j<c;j+=2)e[j>>>3]|=parseInt(a.substr(j,\n2),16)<<24-4*(j%8);return new r.init(e,c/2)}},b=w.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var e=[],j=0;j<a;j++)e.push(String.fromCharCode(c[j>>>2]>>>24-8*(j%4)&255));return e.join(\"\")},parse:function(a){for(var c=a.length,e=[],j=0;j<c;j++)e[j>>>2]|=(a.charCodeAt(j)&255)<<24-8*(j%4);return new r.init(e,c)}},x=w.Utf8={stringify:function(a){try{return decodeURIComponent(escape(b.stringify(a)))}catch(c){throw Error(\"Malformed UTF-8 data\");}},parse:function(a){return b.parse(unescape(encodeURIComponent(a)))}},\nq=l.BufferedBlockAlgorithm=t.extend({reset:function(){this._data=new r.init;this._nDataBytes=0},_append:function(a){\"string\"==typeof a&&(a=x.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,e=c.words,j=c.sigBytes,k=this.blockSize,b=j/(4*k),b=a?u.ceil(b):u.max((b|0)-this._minBufferSize,0);a=b*k;j=u.min(4*a,j);if(a){for(var q=0;q<a;q+=k)this._doProcessBlock(e,q);q=e.splice(0,a);c.sigBytes-=j}return new r.init(q,j)},clone:function(){var a=t.clone.call(this);\na._data=this._data.clone();return a},_minBufferSize:0});l.Hasher=q.extend({cfg:t.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){q.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(b,e){return(new a.init(e)).finalize(b)}},_createHmacHelper:function(a){return function(b,e){return(new n.HMAC.init(a,\ne)).finalize(b)}}});var n=d.algo={};return d}(Math);\n(function(){var u=CryptoJS,p=u.lib.WordArray;u.enc.Base64={stringify:function(d){var l=d.words,p=d.sigBytes,t=this._map;d.clamp();d=[];for(var r=0;r<p;r+=3)for(var w=(l[r>>>2]>>>24-8*(r%4)&255)<<16|(l[r+1>>>2]>>>24-8*((r+1)%4)&255)<<8|l[r+2>>>2]>>>24-8*((r+2)%4)&255,v=0;4>v&&r+0.75*v<p;v++)d.push(t.charAt(w>>>6*(3-v)&63));if(l=t.charAt(64))for(;d.length%4;)d.push(l);return d.join(\"\")},parse:function(d){var l=d.length,s=this._map,t=s.charAt(64);t&&(t=d.indexOf(t),-1!=t&&(l=t));for(var t=[],r=0,w=0;w<\nl;w++)if(w%4){var v=s.indexOf(d.charAt(w-1))<<2*(w%4),b=s.indexOf(d.charAt(w))>>>6-2*(w%4);t[r>>>2]|=(v|b)<<24-8*(r%4);r++}return p.create(t,r)},_map:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"}})();\n(function(u){function p(b,n,a,c,e,j,k){b=b+(n&a|~n&c)+e+k;return(b<<j|b>>>32-j)+n}function d(b,n,a,c,e,j,k){b=b+(n&c|a&~c)+e+k;return(b<<j|b>>>32-j)+n}function l(b,n,a,c,e,j,k){b=b+(n^a^c)+e+k;return(b<<j|b>>>32-j)+n}function s(b,n,a,c,e,j,k){b=b+(a^(n|~c))+e+k;return(b<<j|b>>>32-j)+n}for(var t=CryptoJS,r=t.lib,w=r.WordArray,v=r.Hasher,r=t.algo,b=[],x=0;64>x;x++)b[x]=4294967296*u.abs(u.sin(x+1))|0;r=r.MD5=v.extend({_doReset:function(){this._hash=new w.init([1732584193,4023233417,2562383102,271733878])},\n_doProcessBlock:function(q,n){for(var a=0;16>a;a++){var c=n+a,e=q[c];q[c]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360}var a=this._hash.words,c=q[n+0],e=q[n+1],j=q[n+2],k=q[n+3],z=q[n+4],r=q[n+5],t=q[n+6],w=q[n+7],v=q[n+8],A=q[n+9],B=q[n+10],C=q[n+11],u=q[n+12],D=q[n+13],E=q[n+14],x=q[n+15],f=a[0],m=a[1],g=a[2],h=a[3],f=p(f,m,g,h,c,7,b[0]),h=p(h,f,m,g,e,12,b[1]),g=p(g,h,f,m,j,17,b[2]),m=p(m,g,h,f,k,22,b[3]),f=p(f,m,g,h,z,7,b[4]),h=p(h,f,m,g,r,12,b[5]),g=p(g,h,f,m,t,17,b[6]),m=p(m,g,h,f,w,22,b[7]),\nf=p(f,m,g,h,v,7,b[8]),h=p(h,f,m,g,A,12,b[9]),g=p(g,h,f,m,B,17,b[10]),m=p(m,g,h,f,C,22,b[11]),f=p(f,m,g,h,u,7,b[12]),h=p(h,f,m,g,D,12,b[13]),g=p(g,h,f,m,E,17,b[14]),m=p(m,g,h,f,x,22,b[15]),f=d(f,m,g,h,e,5,b[16]),h=d(h,f,m,g,t,9,b[17]),g=d(g,h,f,m,C,14,b[18]),m=d(m,g,h,f,c,20,b[19]),f=d(f,m,g,h,r,5,b[20]),h=d(h,f,m,g,B,9,b[21]),g=d(g,h,f,m,x,14,b[22]),m=d(m,g,h,f,z,20,b[23]),f=d(f,m,g,h,A,5,b[24]),h=d(h,f,m,g,E,9,b[25]),g=d(g,h,f,m,k,14,b[26]),m=d(m,g,h,f,v,20,b[27]),f=d(f,m,g,h,D,5,b[28]),h=d(h,f,\nm,g,j,9,b[29]),g=d(g,h,f,m,w,14,b[30]),m=d(m,g,h,f,u,20,b[31]),f=l(f,m,g,h,r,4,b[32]),h=l(h,f,m,g,v,11,b[33]),g=l(g,h,f,m,C,16,b[34]),m=l(m,g,h,f,E,23,b[35]),f=l(f,m,g,h,e,4,b[36]),h=l(h,f,m,g,z,11,b[37]),g=l(g,h,f,m,w,16,b[38]),m=l(m,g,h,f,B,23,b[39]),f=l(f,m,g,h,D,4,b[40]),h=l(h,f,m,g,c,11,b[41]),g=l(g,h,f,m,k,16,b[42]),m=l(m,g,h,f,t,23,b[43]),f=l(f,m,g,h,A,4,b[44]),h=l(h,f,m,g,u,11,b[45]),g=l(g,h,f,m,x,16,b[46]),m=l(m,g,h,f,j,23,b[47]),f=s(f,m,g,h,c,6,b[48]),h=s(h,f,m,g,w,10,b[49]),g=s(g,h,f,m,\nE,15,b[50]),m=s(m,g,h,f,r,21,b[51]),f=s(f,m,g,h,u,6,b[52]),h=s(h,f,m,g,k,10,b[53]),g=s(g,h,f,m,B,15,b[54]),m=s(m,g,h,f,e,21,b[55]),f=s(f,m,g,h,v,6,b[56]),h=s(h,f,m,g,x,10,b[57]),g=s(g,h,f,m,t,15,b[58]),m=s(m,g,h,f,D,21,b[59]),f=s(f,m,g,h,z,6,b[60]),h=s(h,f,m,g,C,10,b[61]),g=s(g,h,f,m,j,15,b[62]),m=s(m,g,h,f,A,21,b[63]);a[0]=a[0]+f|0;a[1]=a[1]+m|0;a[2]=a[2]+g|0;a[3]=a[3]+h|0},_doFinalize:function(){var b=this._data,n=b.words,a=8*this._nDataBytes,c=8*b.sigBytes;n[c>>>5]|=128<<24-c%32;var e=u.floor(a/\n4294967296);n[(c+64>>>9<<4)+15]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360;n[(c+64>>>9<<4)+14]=(a<<8|a>>>24)&16711935|(a<<24|a>>>8)&4278255360;b.sigBytes=4*(n.length+1);this._process();b=this._hash;n=b.words;for(a=0;4>a;a++)c=n[a],n[a]=(c<<8|c>>>24)&16711935|(c<<24|c>>>8)&4278255360;return b},clone:function(){var b=v.clone.call(this);b._hash=this._hash.clone();return b}});t.MD5=v._createHelper(r);t.HmacMD5=v._createHmacHelper(r)})(Math);\n(function(){var u=CryptoJS,p=u.lib,d=p.Base,l=p.WordArray,p=u.algo,s=p.EvpKDF=d.extend({cfg:d.extend({keySize:4,hasher:p.MD5,iterations:1}),init:function(d){this.cfg=this.cfg.extend(d)},compute:function(d,r){for(var p=this.cfg,s=p.hasher.create(),b=l.create(),u=b.words,q=p.keySize,p=p.iterations;u.length<q;){n&&s.update(n);var n=s.update(d).finalize(r);s.reset();for(var a=1;a<p;a++)n=s.finalize(n),s.reset();b.concat(n)}b.sigBytes=4*q;return b}});u.EvpKDF=function(d,l,p){return s.create(p).compute(d,\nl)}})();\nCryptoJS.lib.Cipher||function(u){var p=CryptoJS,d=p.lib,l=d.Base,s=d.WordArray,t=d.BufferedBlockAlgorithm,r=p.enc.Base64,w=p.algo.EvpKDF,v=d.Cipher=t.extend({cfg:l.extend(),createEncryptor:function(e,a){return this.create(this._ENC_XFORM_MODE,e,a)},createDecryptor:function(e,a){return this.create(this._DEC_XFORM_MODE,e,a)},init:function(e,a,b){this.cfg=this.cfg.extend(b);this._xformMode=e;this._key=a;this.reset()},reset:function(){t.reset.call(this);this._doReset()},process:function(e){this._append(e);return this._process()},\nfinalize:function(e){e&&this._append(e);return this._doFinalize()},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(e){return{encrypt:function(b,k,d){return(\"string\"==typeof k?c:a).encrypt(e,b,k,d)},decrypt:function(b,k,d){return(\"string\"==typeof k?c:a).decrypt(e,b,k,d)}}}});d.StreamCipher=v.extend({_doFinalize:function(){return this._process(!0)},blockSize:1});var b=p.mode={},x=function(e,a,b){var c=this._iv;c?this._iv=u:c=this._prevBlock;for(var d=0;d<b;d++)e[a+d]^=\nc[d]},q=(d.BlockCipherMode=l.extend({createEncryptor:function(e,a){return this.Encryptor.create(e,a)},createDecryptor:function(e,a){return this.Decryptor.create(e,a)},init:function(e,a){this._cipher=e;this._iv=a}})).extend();q.Encryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize;x.call(this,e,a,c);b.encryptBlock(e,a);this._prevBlock=e.slice(a,a+c)}});q.Decryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize,d=e.slice(a,a+c);b.decryptBlock(e,a);x.call(this,\ne,a,c);this._prevBlock=d}});b=b.CBC=q;q=(p.pad={}).Pkcs7={pad:function(a,b){for(var c=4*b,c=c-a.sigBytes%c,d=c<<24|c<<16|c<<8|c,l=[],n=0;n<c;n+=4)l.push(d);c=s.create(l,c);a.concat(c)},unpad:function(a){a.sigBytes-=a.words[a.sigBytes-1>>>2]&255}};d.BlockCipher=v.extend({cfg:v.cfg.extend({mode:b,padding:q}),reset:function(){v.reset.call(this);var a=this.cfg,b=a.iv,a=a.mode;if(this._xformMode==this._ENC_XFORM_MODE)var c=a.createEncryptor;else c=a.createDecryptor,this._minBufferSize=1;this._mode=c.call(a,\nthis,b&&b.words)},_doProcessBlock:function(a,b){this._mode.processBlock(a,b)},_doFinalize:function(){var a=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE){a.pad(this._data,this.blockSize);var b=this._process(!0)}else b=this._process(!0),a.unpad(b);return b},blockSize:4});var n=d.CipherParams=l.extend({init:function(a){this.mixIn(a)},toString:function(a){return(a||this.formatter).stringify(this)}}),b=(p.format={}).OpenSSL={stringify:function(a){var b=a.ciphertext;a=a.salt;return(a?s.create([1398893684,\n1701076831]).concat(a).concat(b):b).toString(r)},parse:function(a){a=r.parse(a);var b=a.words;if(1398893684==b[0]&&1701076831==b[1]){var c=s.create(b.slice(2,4));b.splice(0,4);a.sigBytes-=16}return n.create({ciphertext:a,salt:c})}},a=d.SerializableCipher=l.extend({cfg:l.extend({format:b}),encrypt:function(a,b,c,d){d=this.cfg.extend(d);var l=a.createEncryptor(c,d);b=l.finalize(b);l=l.cfg;return n.create({ciphertext:b,key:c,iv:l.iv,algorithm:a,mode:l.mode,padding:l.padding,blockSize:a.blockSize,formatter:d.format})},\ndecrypt:function(a,b,c,d){d=this.cfg.extend(d);b=this._parse(b,d.format);return a.createDecryptor(c,d).finalize(b.ciphertext)},_parse:function(a,b){return\"string\"==typeof a?b.parse(a,this):a}}),p=(p.kdf={}).OpenSSL={execute:function(a,b,c,d){d||(d=s.random(8));a=w.create({keySize:b+c}).compute(a,d);c=s.create(a.words.slice(b),4*c);a.sigBytes=4*b;return n.create({key:a,iv:c,salt:d})}},c=d.PasswordBasedCipher=a.extend({cfg:a.cfg.extend({kdf:p}),encrypt:function(b,c,d,l){l=this.cfg.extend(l);d=l.kdf.execute(d,\nb.keySize,b.ivSize);l.iv=d.iv;b=a.encrypt.call(this,b,c,d.key,l);b.mixIn(d);return b},decrypt:function(b,c,d,l){l=this.cfg.extend(l);c=this._parse(c,l.format);d=l.kdf.execute(d,b.keySize,b.ivSize,c.salt);l.iv=d.iv;return a.decrypt.call(this,b,c,d.key,l)}})}();\n(function(){for(var u=CryptoJS,p=u.lib.BlockCipher,d=u.algo,l=[],s=[],t=[],r=[],w=[],v=[],b=[],x=[],q=[],n=[],a=[],c=0;256>c;c++)a[c]=128>c?c<<1:c<<1^283;for(var e=0,j=0,c=0;256>c;c++){var k=j^j<<1^j<<2^j<<3^j<<4,k=k>>>8^k&255^99;l[e]=k;s[k]=e;var z=a[e],F=a[z],G=a[F],y=257*a[k]^16843008*k;t[e]=y<<24|y>>>8;r[e]=y<<16|y>>>16;w[e]=y<<8|y>>>24;v[e]=y;y=16843009*G^65537*F^257*z^16843008*e;b[k]=y<<24|y>>>8;x[k]=y<<16|y>>>16;q[k]=y<<8|y>>>24;n[k]=y;e?(e=z^a[a[a[G^z]]],j^=a[a[j]]):e=j=1}var H=[0,1,2,4,8,\n16,32,64,128,27,54],d=d.AES=p.extend({_doReset:function(){for(var a=this._key,c=a.words,d=a.sigBytes/4,a=4*((this._nRounds=d+6)+1),e=this._keySchedule=[],j=0;j<a;j++)if(j<d)e[j]=c[j];else{var k=e[j-1];j%d?6<d&&4==j%d&&(k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255]):(k=k<<8|k>>>24,k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255],k^=H[j/d|0]<<24);e[j]=e[j-d]^k}c=this._invKeySchedule=[];for(d=0;d<a;d++)j=a-d,k=d%4?e[j]:e[j-4],c[d]=4>d||4>=j?k:b[l[k>>>24]]^x[l[k>>>16&255]]^q[l[k>>>\n8&255]]^n[l[k&255]]},encryptBlock:function(a,b){this._doCryptBlock(a,b,this._keySchedule,t,r,w,v,l)},decryptBlock:function(a,c){var d=a[c+1];a[c+1]=a[c+3];a[c+3]=d;this._doCryptBlock(a,c,this._invKeySchedule,b,x,q,n,s);d=a[c+1];a[c+1]=a[c+3];a[c+3]=d},_doCryptBlock:function(a,b,c,d,e,j,l,f){for(var m=this._nRounds,g=a[b]^c[0],h=a[b+1]^c[1],k=a[b+2]^c[2],n=a[b+3]^c[3],p=4,r=1;r<m;r++)var q=d[g>>>24]^e[h>>>16&255]^j[k>>>8&255]^l[n&255]^c[p++],s=d[h>>>24]^e[k>>>16&255]^j[n>>>8&255]^l[g&255]^c[p++],t=\nd[k>>>24]^e[n>>>16&255]^j[g>>>8&255]^l[h&255]^c[p++],n=d[n>>>24]^e[g>>>16&255]^j[h>>>8&255]^l[k&255]^c[p++],g=q,h=s,k=t;q=(f[g>>>24]<<24|f[h>>>16&255]<<16|f[k>>>8&255]<<8|f[n&255])^c[p++];s=(f[h>>>24]<<24|f[k>>>16&255]<<16|f[n>>>8&255]<<8|f[g&255])^c[p++];t=(f[k>>>24]<<24|f[n>>>16&255]<<16|f[g>>>8&255]<<8|f[h&255])^c[p++];n=(f[n>>>24]<<24|f[g>>>16&255]<<16|f[h>>>8&255]<<8|f[k&255])^c[p++];a[b]=q;a[b+1]=s;a[b+2]=t;a[b+3]=n},keySize:8});u.AES=p._createHelper(d)})();\n\ncc.log(\"aes\");\nif (window.initHjmDataFun && window.initHjmFun && window.initDylFun) {\n\twindow.initDylFun(CryptoJS);\n\twindow.initHjmFun();\n    window.initHjmDataFun();\n}\nelse {\n\twindow.isCryptoJS = CryptoJS;\n}","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    },\r\n\r\n    start () {\r\n        this.node.js = this;\r\n        this.touchData = null;\r\n    },\r\n\r\n    saveTouch (tp) {\r\n        if (!this.touchData) {\r\n            this.touchData = \"ing\";\r\n            this.play(tp);\r\n        }\r\n        else if (this.touchData === \"ing\") {\r\n            this.touchData = tp;\r\n        }\r\n        else {\r\n            this.touchData = tp;\r\n        }\r\n    },\r\n\r\n    delTouch () {\r\n        if (!this.touchData) {\r\n        }\r\n        else if (this.touchData === \"ing\") {\r\n            this.touchData = null;\r\n        }\r\n        else {\r\n            // this.touchData = tp;\r\n            let tp = this.touchData;\r\n            this.touchData = \"ing\";\r\n            this.play(tp);\r\n        }\r\n    },\r\n\r\n    getAction () {\r\n        let id = 0;\r\n        let dataArr = [];        \r\n        let end = ()=>{\r\n            let i = id++;\r\n            if (i >= dataArr.length) {\r\n                return;\r\n            }\r\n            let {node, fun, arr} = dataArr[i];\r\n            fun.bind(node)(end, ...arr);\r\n        }\r\n\r\n        let add = (node, fun, ...arr)=>{\r\n            if (!node) {\r\n                return end();\r\n            }\r\n            if (!fun) {\r\n                return;\r\n            }\r\n            let data = {\r\n                node: node,\r\n                fun: fun,\r\n                arr: arr\r\n            }\r\n            dataArr.push(data);\r\n        }\r\n        return add;\r\n    },\r\n\r\n    touchOn (p) {\r\n        let tp = this.node.posMap.find(p);\r\n        if (tp) {\r\n            this.saveTouch(tp);\r\n        }\r\n    },\r\n\r\n    play (tp) {\r\n        let map = this.node.map;\r\n        let dir = this.getDir(tp);      \r\n        if (!dir) { //操作无效\r\n            this.delTouch();\r\n            return;\r\n        }  \r\n        let moveNode = map.get(tp);\r\n        this.moveType = moveNode.type;\r\n        moveNode.oriParent = moveNode.parent;\r\n        moveNode.parent = hjm._top;\r\n        let add = this.getAction();\r\n        add(this, this.run, tp, dir);\r\n        add(this, this.prePk);\r\n        if (this.moveType === \"me\") {\r\n            // this.isAtk = \r\n            // cc.log(\"me\");\r\n            let enPosArr = this.getAtkDefEn(tp.add(dir));\r\n            moveNode.defFun = this.defFun;\r\n            if (this.atkNode && enPosArr.length > 0) {\r\n                // cc.log(\"1111111111111111111\");\r\n                add(this.atkNode, this.atkNode.add, hjm._top, this.atkDir);\r\n                add(this, (end)=>{\r\n                    // cc.log(typeof this.atkNode.atk, typeof moveNode.atk);\r\n                    moveNode.atk += this.atkNode.atk;\r\n                    end();\r\n                });\r\n                // cc.log(\"atk\");\r\n            }\r\n            if (this.defNode && enPosArr.length > 0) {\r\n                // cc.log(\"2222222222222222\");\r\n                add(this.defNode, this.defNode.add, hjm._top, this.defDir);\r\n                add(this, (end)=>{\r\n                    moveNode.def += this.defNode.def;\r\n                    end();\r\n                });\r\n            }\r\n            cc.log(\"this.atkFun\", this.atkFun);\r\n            add(this, hjm._skill.add, this.atkFun, tp, map, this.node.posMap);\r\n            add(this, this.checkDie);\r\n            for (let i = enPosArr.length - 1; i >= 0; i--) {\r\n                let ep = enPosArr[i];\r\n                let en = map.get(ep);\r\n                add(this, hjm._skill.add, en.atkFun, ep, map, this.node.posMap);\r\n                add(this, this.checkDie);\r\n            }\r\n            // if (this.isAtk) {\r\n            //     add(this, this.node._skill.add, dyl.atkFun, tp, map, this.node.posMap);\r\n            // }\r\n            // else {\r\n            //     add(this, this.node._skill.add, \"notAtk\", tp, map, this.node.posMap);\r\n            // }\r\n        }\r\n        else if (this.moveType === \"en\") {\r\n            add(this, hjm._skill.add, moveNode.atkFun, tp, map, this.node.posMap);\r\n            add(this, this.checkDie);\r\n        }\r\n\r\n        add(this, this.endPlay, tp);\r\n        add(); \r\n    },\r\n\r\n    checkDie (end) {\r\n        let notLose = false;\r\n        let notWin = false;\r\n        let map = this.node.map;\r\n        map.run((tp)=>{\r\n            let node = map.get(tp);\r\n            if (node && node.hp <= 0) {\r\n                this.die(tp);\r\n                return;\r\n            }\r\n            if (node && node.type === \"me\") {\r\n                notLose = true;\r\n            }\r\n            if (node && node.type === \"en\") {\r\n                notWin = true;\r\n            }\r\n        })\r\n        if (!notLose) {\r\n            this.endAns = \"lose\";\r\n            end();\r\n            return;\r\n        }\r\n        if (!notWin) {\r\n            this.endAns = \"win\";\r\n            end();\r\n            return;\r\n        }\r\n        end();\r\n        return;\r\n    },\r\n\r\n    die (tp) {\r\n        let notArr = this.node.notArr;\r\n        let not = notArr[notArr.length - 1];\r\n        notArr.length--;\r\n        not.active = true;\r\n\r\n        let node = this.node.map.get(tp);\r\n        node.active = false;\r\n        not.setPosition(this.node.posMap.get(tp));\r\n        this.node.map.set(tp, not);\r\n    },\r\n\r\n    getAtkDefEn (tp) {\r\n        let map = this.node.map;\r\n        let dirArr = dyl.addDirArr();\r\n        let enPosArr = [];\r\n        this.atkFun = \"notAtk\";\r\n        this.defFun = \"notDef\";\r\n        this.atkNode = null;\r\n        this.defNode = null;\r\n        for (let i = 0; i < 4; i++) {\r\n            let dir = dirArr[i];\r\n            let ntp = dir.add(tp);\r\n            let type = map.get(ntp, \"type\");\r\n            if (type === \"atk\") {\r\n                this.atkFun = ai.atkFun;\r\n                this.atkNode = map.get(ntp);\r\n                this.atkDir = dir.mul(-this.node.posMap.d);\r\n            }\r\n            else if (type === \"def\") {\r\n                this.defFun = ai.defFun;\r\n                this.defNode = map.get(ntp);\r\n                this.defDir = dir.mul(-this.node.posMap.d);\r\n            }\r\n            else if (type === \"en\") {\r\n                enPosArr.push(ntp);\r\n            }\r\n        }\r\n        return enPosArr;\r\n    },\r\n\r\n    prePk (end) {\r\n        let map = this.node.map;\r\n        map.run((p)=>{\r\n            let node = map.get(p);\r\n            if (node && (node.type !== \"not\")) {\r\n                node.oriData = {\r\n                    // hp: node.hp,\r\n                    atk: node.atk,\r\n                    def: node.def\r\n                }\r\n            }\r\n        })\r\n        this.isAtk = \"notAtk\";\r\n        this.isDef = \"notDef\";\r\n        end();\r\n    },\r\n\r\n\r\n\r\n\r\n    // saveTouch (tp) {\r\n    //     if (!this.touchTp) {\r\n    //         this.play(tp);\r\n    //     }\r\n    // }, \r\n\r\n    endPlay (end, tp) {\r\n        cc.log(\"endPlay\");\r\n        let moveNode = this.node.map.get(tp);\r\n        moveNode.parent = moveNode.oriParent;\r\n        let map = this.node.map;\r\n        map.run((p)=>{\r\n            let node = map.get(p);\r\n            if (node && (node.type !== \"not\")) {\r\n                // node.hp = node.oriData.hp;\r\n                node.atk = node.oriData.atk;\r\n                node.def = node.oriData.def;\r\n            }\r\n        })\r\n        if (this.atkNode) {\r\n            this.atkNode.reset();\r\n        }\r\n        if (this.defNode) {\r\n            this.defNode.reset();\r\n        }\r\n        // this.checkDie();\r\n        this.delTouch();\r\n        if (this.endAns) {\r\n            this.node.touch = \"end\";\r\n            hjm._end.add(this.endAns, 0.3);\r\n        }\r\n        end();\r\n    },\r\n\r\n    run (end, tp, dir) {\r\n        let ntp = dir.add(tp);\r\n        let move = cc.moveTo(0.2, this.node.posMap.get(ntp));\r\n        // move.add = -3;\r\n        let node = this.node.map.get(tp);\r\n        dyl.run(node, move, ()=>{\r\n            this.node.map.set(tp, null);\r\n            this.node.map.set(ntp, node);\r\n            tp.x = ntp.x;\r\n            tp.y = ntp.y;\r\n        }, end);\r\n    },\r\n\r\n    getDir (tp) {\r\n        let map = this.node.map;\r\n        if (!map.get(tp)) {\r\n            return null;\r\n        }\r\n        let dirArr = dyl.addDirArr();\r\n        for (let i = 0; i < 4; i++) {\r\n            let dir = dirArr[i];\r\n            let ntp = dir.add(tp);\r\n            if (map.get(ntp) === null) {\r\n                return dir;\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n    // update (dt) {},\r\n});\r\n"],"sourceRoot":"/source/","file":"project.js"}